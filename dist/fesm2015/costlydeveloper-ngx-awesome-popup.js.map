{"version":3,"file":"costlydeveloper-ngx-awesome-popup.js","sources":["../../ngx-awesome-popup/locator.service.ts","../../ngx-awesome-popup/core/enums.ts","../../ngx-awesome-popup/core/global-config.service.ts","../../ngx-awesome-popup/core/global.ts","../../ngx-awesome-popup/types/confirm-box/core/confirm-box-config.service.ts","../../ngx-awesome-popup/core/dialog-injector.ts","../../ngx-awesome-popup/core/animations.ts","../../ngx-awesome-popup/types/confirm-box/confirm-box-wrapper/confirm-box-wrapper.component.ts","../../ngx-awesome-popup/types/confirm-box/core/confirm-box-service.ts","../../ngx-awesome-popup/types/confirm-box/core/model.ts","../../ngx-awesome-popup/types/toast-notification/core/toast-notification-config.service.ts","../../ngx-awesome-popup/types/toast-notification/core/wrapper-abstraction.ts","../../ngx-awesome-popup/types/toast-notification/toast-notification-simple-wrapper/toast-notification-simple-wrapper.component.ts","../../ngx-awesome-popup/types/toast-notification/toast-notification-wrapper/toast-notification-wrapper.component.ts","../../ngx-awesome-popup/types/toast-notification/core/toast-notification.service.ts","../../ngx-awesome-popup/types/toast-notification/core/model.ts","../../ngx-awesome-popup/default-loader/default-loader.component.ts","../../ngx-awesome-popup/types/dialog/core/dialog-config.service.ts","../../ngx-awesome-popup/core/insertion-loader.directive.ts","../../ngx-awesome-popup/core/insertion.directive.ts","../../ngx-awesome-popup/types/dialog/dialog-wrapper/dialog-wrapper.component.ts","../../ngx-awesome-popup/types/dialog/core/dialog.service.ts","../../ngx-awesome-popup/types/dialog/core/model.ts","../../ngx-awesome-popup/ngx-awesome-popup.module.ts","../../public_api.ts","../../costlydeveloper-ngx-awesome-popup.ts"],"sourcesContent":["import {Injector} from '@angular/core';\n\n// @dynamic\nexport class ServiceLocator {\n\tstatic injector: Injector;\n}\n","export enum DialogLayoutDisplay {\n\tNONE    = 0,\n\tSUCCESS = 1,\n\tINFO    = 2,\n\tWARNING = 3,\n\tDANGER  = 4\n}\n\nexport enum ButtonLayoutDisplay {\n\tNONE      = 0,\n\tSUCCESS   = 1,\n\tINFO      = 2,\n\tWARNING   = 3,\n\tDANGER    = 4,\n\tDARK      = 5,\n\tLIGHT     = 6,\n\tPRIMARY   = 7,\n\tSECONDARY = 8,\n\tLINK      = 9\n}\n\nexport enum ColorVariance {\n\n\tSUCCESS   = 1,\n\tINFO      = 2,\n\tWARNING   = 3,\n\tDANGER    = 4,\n\tDARK      = 5,\n\tLIGHT     = 6,\n\tPRIMARY   = 7,\n\tSECONDARY = 8,\n}\n\nexport type VerticalPosition = 'left' | 'center' | 'right';\n","import {Inject, Injectable} from '@angular/core';\nimport {ColorVariance} from './enums';\nimport {GlobalClass, GlobalInterface} from './global';\nimport IColorProvider = GlobalInterface.IColorProvider;\n\n@Injectable({\n\tprovidedIn: 'root'\n})\nexport class GlobalConfigService {\n\n\tproductionGlobalConfig: GlobalInterface.IGlobalConfig     = new GlobalClass.GlobalConfig();\n\tprivate authorGlobalConfig: GlobalInterface.IGlobalConfig = new GlobalClass.GlobalConfig();\n\tprivate userGeneratedConfig: GlobalInterface.IGlobalUserConfig;\n\n\tconstructor(@Inject('globalConfig') private userGlobalConfig: GlobalInterface.IGlobalUserConfig) {\n\t\tthis.userGeneratedConfig = new GlobalClass.GlobalUserConfig(userGlobalConfig);\n\n\t\t// region *** author global config values (if there is no user input) ***\n\t\tthis.authorGlobalConfig.DisplayColor.Primary   = null; // new GlobalClass.ColorProvider('#ff9e00');\n\t\tthis.authorGlobalConfig.DisplayColor.Secondary = null; // new GlobalClass.ColorProvider('#989ea5');\n\t\tthis.authorGlobalConfig.DisplayColor.Success   = null; // new GlobalClass.ColorProvider('#3caea3');\n\t\tthis.authorGlobalConfig.DisplayColor.Info      = null; // new GlobalClass.ColorProvider('#2f8ee5');\n\t\tthis.authorGlobalConfig.DisplayColor.Warning   = null; // new GlobalClass.ColorProvider('#ffc107');\n\t\tthis.authorGlobalConfig.DisplayColor.Danger    = null; // new GlobalClass.ColorProvider('#e46464');\n\t\tthis.authorGlobalConfig.DisplayColor.Light     = null; // new GlobalClass.ColorProvider('#f8f9fa');\n\t\tthis.authorGlobalConfig.DisplayColor.Dark      = null; // new GlobalClass.ColorProvider('#343a40');\n\t\t// endregion\n\n\t\tthis.productionGlobalConfig.DisplayColor = this.authorGlobalConfig.DisplayColor;\n\n\t\t// region *** global userConfig (user input app-module) ***\n\t\tthis.setUserColors(this.userGeneratedConfig.ColorList);\n\n\t\t// endregion\n\n\t\tthis.setNodeStyles(this.productionGlobalConfig.DisplayColor);\n\n\t}\n\n\tresetStyles(): void {\n\t\tthis.setUserColors(this.userGeneratedConfig.ColorList);\n\t\tthis.setNodeStyles(this.productionGlobalConfig.DisplayColor, true);\n\t}\n\n\tsetNodeStyles(_ProductionColorTypes: GlobalInterface.IColorObject, _Reset: boolean = false) {\n\n\t\tif (_Reset) {\n\t\t\tlet evolveDialogStyleNode = document.getElementById('ngx-awesome-popup-glob-styles') as HTMLStyleElement;\n\t\t\tif (evolveDialogStyleNode) {\n\t\t\t\tevolveDialogStyleNode.remove();\n\t\t\t}\n\t\t}\n\t\tthis.setToastStyles();\n\n\t\tObject.keys(_ProductionColorTypes).forEach(key => {\n\t\t\tif (_ProductionColorTypes[key]) {\n\n\t\t\t\tthis.setButtonStyling(key, _ProductionColorTypes[key]);\n\t\t\t\tthis.setIconStyling(key, _ProductionColorTypes[key]);\n\t\t\t\tthis.setToastStyling(key, _ProductionColorTypes[key]);\n\t\t\t\tthis.setDialogFrame(key, _ProductionColorTypes[key]);\n\n\t\t\t\tif (ColorVariance[key.toUpperCase()] === ColorVariance.PRIMARY) {\n\t\t\t\t\tthis.getSheet('ngx-awesome-popup-styles').addRule('.ngx-awesome-popup-overlay', `background:  ${_ProductionColorTypes[key].TransparentDarkenVariance}!important;`);\n\t\t\t\t}\n\t\t\t}\n\t\t});\n\n\n\t}\n\n\tpublic setUserColors(_UserColorTypes: GlobalInterface.IColorTypes): void {\n\n\t\tif (typeof _UserColorTypes !== 'object') {\n\t\t\treturn;\n\t\t}\n\n\t\tconst userKeys             = Object.keys(_UserColorTypes);\n\t\tconst productionObjectKeys = Object.keys(this.productionGlobalConfig.DisplayColor);\n\n\t\tuserKeys.forEach(key => {\n\n\t\t\tif (productionObjectKeys.find(tKey => tKey === key)) {\n\t\t\t\tif (_UserColorTypes[key]) {\n\t\t\t\t\tconst baseColorProvider = new GlobalClass.ColorProvider(_UserColorTypes[key]);\n\t\t\t\t\tif (baseColorProvider.Base) {\n\n\t\t\t\t\t\tthis.productionGlobalConfig.DisplayColor[key] = baseColorProvider;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tthis.productionGlobalConfig.DisplayColor[key] = null;\n\t\t\t\t}\n\n\t\t\t}\n\t\t});\n\n\t}\n\n\tpublic getSheet(_StyleID: string) {\n\t\t// Create the <style> tag\n\t\tlet evolveDialogStyleNode = document.getElementById(_StyleID) as HTMLStyleElement;\n\t\tif (!evolveDialogStyleNode) {\n\t\t\tconst headNode = document.head || document.getElementsByTagName('head')[0];\n\t\t\tif (!headNode) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tevolveDialogStyleNode = document.createElement('style');\n\t\t\tevolveDialogStyleNode.setAttribute('id', _StyleID);\n\t\t\tevolveDialogStyleNode.appendChild(document.createTextNode(''));\n\t\t\theadNode.appendChild(evolveDialogStyleNode);\n\n\t\t}\n\n\t\treturn evolveDialogStyleNode ? evolveDialogStyleNode.sheet : null;\n\t};\n\n\tprivate setToastStyling(_Key: string, _ColorProvider: IColorProvider) {\n\n\t\tconst standardToast      = `.toast-wrapper.standard-toast .evolve-toast.${_Key.toLowerCase()}-dialog`;\n\t\tconst standardToastStyle = `\n        background:  ${_ColorProvider.BrightShade}!important;\n        border-color: ${_ColorProvider.Brighten}!important;\n        `;\n\n\t\tconst simpleToast      = `.toast-wrapper.simple-toast .evolve-toast.${_Key.toLowerCase()}-dialog`;\n\t\tconst simpleToastStyle = `\n        background:  ${_ColorProvider.BrightWarmly}!important;\n        color:  ${_ColorProvider.Darken}!important;\n        `;\n\n\t\tconst baseProgress      = `.toast-wrapper .evolve-toast.${_Key.toLowerCase()}-dialog .progress-bar`;\n\t\tconst baseProgressStyle = `\n        background-color:  ${_ColorProvider.Brighten}!important;\n        `;\n\n\t\tthis.getSheet('ngx-awesome-popup-glob-styles').addRule(baseProgress, baseProgressStyle);\n\t\tthis.getSheet('ngx-awesome-popup-glob-styles').addRule(standardToast, standardToastStyle);\n\t\tthis.getSheet('ngx-awesome-popup-glob-styles').addRule(simpleToast, simpleToastStyle);\n\t}\n\n\tprivate setButtonStyling(_Key: string, _ColorProvider: IColorProvider) {\n\n\t\tconst baseButtonClass = `.ed-btn-${_Key.toLowerCase()}`;\n\t\tconst baseStyle       = `\n        color: ${_ColorProvider.ContrastColor}!important;\n        background:  ${_ColorProvider.Base}!important;\n        border-color: ${_ColorProvider.BrightenForShade}!important;\n        `;\n\n\t\tconst hoverButtonClass = `.ed-btn-${_Key.toLowerCase()}:hover`;\n\t\tconst hoverStyle       = `\n        background:  ${_ColorProvider.IsBaseBright ? _ColorProvider.DarkenForShade : _ColorProvider.BrightenForShade}!important;\n        border-color: ${_ColorProvider.IsBaseBright ? _ColorProvider.Darken : _ColorProvider.Brighten}!important;\n        `;\n\n\t\tconst focusActiveButtonClass = `.ed-btn-${_Key.toLowerCase()}:focus, .ed-btn-${_Key.toLowerCase()}:active`;\n\t\tconst focusActiveStyle       = `\n        box-shadow: 0 0 1px 2px ${_ColorProvider.IsBaseBright ? _ColorProvider.Darken : _ColorProvider.Brighten}!important;\n        `;\n\n\t\tthis.getSheet('ngx-awesome-popup-glob-styles').addRule(baseButtonClass, baseStyle);\n\t\tthis.getSheet('ngx-awesome-popup-glob-styles').addRule(hoverButtonClass, hoverStyle);\n\t\tthis.getSheet('ngx-awesome-popup-glob-styles').addRule(focusActiveButtonClass, focusActiveStyle);\n\n\t}\n\n\tprivate setIconStyling(_Key: string, _ColorProvider: IColorProvider) {\n\n\t\tconst baseIconClass = `.ap-icon-${_Key.toLowerCase()}`;\n\t\tconst baseStyle     = `color: ${_ColorProvider.BrightenForShade}!important;`;\n\n\t\tthis.getSheet('ngx-awesome-popup-glob-styles').addRule(baseIconClass, baseStyle);\n\t}\n\n\tprivate setDialogFrame(_Key: string, _ColorProvider: IColorProvider) {\n\n\t\tconst baseDialogFrameClass = `.ngx-awesome-popup-overlay .${_Key.toLowerCase()}-dialog`;\n\t\tconst baseStyle            = `\n        border-color: ${_ColorProvider.Brighten}!important;\n        `;\n\n\t\tthis.getSheet('ngx-awesome-popup-glob-styles').addRule(baseDialogFrameClass, baseStyle);\n\n\t}\n\n\tprivate setToastStyles() {\n\n\n\t\tthis.getSheet('ngx-awesome-popup-styles').addRule(`.toast-entity`, `all 0.5s ease;`);\n\t\tthis.getSheet('ngx-awesome-popup-styles').addRule(`.toast-entity:first-child`, `animation: move 0.7s ease-out;`);\n\t\tthis.getSheet('ngx-awesome-popup-styles').addRule(`@-webkit-keyframes move`, `\n                                        0% {margin-top: -5px; opacity: 0.4;}\n                                        30% {margin-top: -4px; opacity: 0.7;}\n                                        100% {margin-top: 0px; opacity: 1;}\n                                        `);\n\t\tthis.getSheet('ngx-awesome-popup-styles').addRule(`@keyframes move`, `\n                                        0% {margin-top: -5px; opacity: 0.4;}\n                                        30% {margin-top: -4px; opacity: 0.7;}\n                                        100% {margin-top: 0px; opacity: 1;}\n                                        `);\n\t}\n\n}\n","import {ServiceLocator} from '../locator.service';\nimport {ButtonLayoutDisplay} from './enums';\nimport {GlobalConfigService} from './global-config.service';\n\nexport namespace GlobalInterface {\n\n\t/**\n\t * Each property of {@link ColorList} represent a string which represent a color in hex or rgb/rgba format.\n\t * For available color types(properties) check {@link IColorTypes} interface.\n\t * Every color is optional, and it will reflect on dialog or button color types and its color contrast or variance.\n\t *  * ```typescript\n\t * // ColorList object example.\n\t * const colorList = {\n\t *         ColorList: {\n\t *            Primary  : '#ff9e00',\n\t *            Secondary: '#989ea5',\n\t *            Info     : '#2f8ee5',\n\t *            Success  : '#3caea3',\n\t *            Warning  : '#ffc107',\n\t *            Danger   : '#e46464',\n\t *            Light    : '#fbfbfb',\n\t *            Dark     : '#343a40'\n\t *           }\n\t *        }\n\t * ```\n\t */\n\texport interface IGlobalUserConfig {\n\t\tColorList?: GlobalInterface.IColorTypes;\n\t}\n\n\texport interface IGlobalConfig {\n\t\tDisplayColor?: GlobalInterface.IColorObject;\n\t}\n\n\texport interface IColorTypes {\n\t\tPrimary?: string;\n\t\tSecondary?: string;\n\t\tSuccess?: string;\n\t\tInfo?: string;\n\t\tWarning?: string;\n\t\tDanger?: string;\n\t\tLight?: string;\n\t\tDark?: string;\n\t}\n\n\texport interface IPrivateResponse {\n\n\t\tsetBelonging(_DialogBelonging): void\n\t}\n\n\t/**\n\t * Interface for custom button.\n\t *\n\t * Example:\n\t * ```typescript\n\t * // Custom button object.\n\t * const button = {\n\t *        ID         : 'confirm_btn',\n\t *        Label:     : 'Confirm'\n\t *        LayoutType : ButtonLayoutDisplay.SUCCESS\n\t *  }\n\t * // Or instantiated with ButtonMaker class\n\t * const button2 = new ButtonMaker('Confirm', 'confirm_btn', ButtonLayoutDisplay.SUCCESS)\n\t * ```\n\t * * ButtonLayoutDisplay: {@link ButtonLayoutDisplay}\n\t */\n\texport interface IButton {\n\t\tLabel: string;\n\t\tLayoutType: ButtonLayoutDisplay | null;\n\t\tID?: string;\n\t}\n\n\texport interface IColorObject {\n\t\tPrimary?: GlobalInterface.IColorProvider;\n\t\tSecondary?: GlobalInterface.IColorProvider;\n\t\tSuccess?: GlobalInterface.IColorProvider;\n\t\tInfo?: GlobalInterface.IColorProvider;\n\t\tWarning?: GlobalInterface.IColorProvider;\n\t\tDanger?: GlobalInterface.IColorProvider;\n\t\tLight?: GlobalInterface.IColorProvider;\n\t\tDark?: GlobalInterface.IColorProvider;\n\t}\n\n\texport interface IColorProvider {\n\n\t\tBase: string;\n\t\tBrighten: string;\n\t\tBrightenForShade: string;\n\t\tDarken: string;\n\t\tDarkenForShade: string;\n\t\tContrastColor: string;\n\t\tBrightShade: string;\n\t\tBrightWarmly: string;\n\t\tTransparentDarkenVariance: string;\n\t\tIsBaseBright: boolean;\n\t}\n\n\texport interface IDispatch {\n\t\tTitle: string;\n\t\tMessage: string;\n\t}\n}\n\nexport namespace GlobalClass {\n\n\texport class Dispatch {\n\t\tTitle: string   = null;\n\t\tMessage: string = null;\n\t}\n\n\texport class ButtonMaker implements GlobalInterface.IButton {\n\n\t\tconstructor(public Label: string, public ID: string, public LayoutType: ButtonLayoutDisplay = ButtonLayoutDisplay.PRIMARY) {\n\t\t}\n\t}\n\n\texport class GlobalUserConfig implements GlobalInterface.IGlobalUserConfig {\n\t\tColorList: GlobalInterface.IColorTypes = new GlobalClass.ColorTypes();\n\n\t\tconstructor(_GlobalUserConfig: GlobalInterface.IGlobalUserConfig) {\n\t\t\tif (_GlobalUserConfig) {\n\t\t\t\tconst dataControl = new GlobalClass.DataControl();\n\t\t\t\tdataControl.copyValuesFrom(_GlobalUserConfig, this);\n\t\t\t\tconst colorList = new GlobalClass.ColorTypes();\n\t\t\t\tthis.ColorList  = dataControl.copyValuesFrom(this.ColorList, colorList);\n\t\t\t}\n\t\t}\n\t}\n\n\texport class ColorTypes implements GlobalInterface.IColorTypes {\n\t\tPrimary: string   = null;\n\t\tSecondary: string = null;\n\t\tSuccess: string   = null;\n\t\tInfo: string      = null;\n\t\tWarning: string   = null;\n\t\tDanger: string    = null;\n\t\tLight: string     = null;\n\t\tDark: string      = null;\n\t}\n\n\texport class ResetGlobalConfig {\n\t\tconstructor(globalConfig?: GlobalInterface.IGlobalUserConfig) {\n\n\t\t\tconst globalConfigService: GlobalConfigService = ServiceLocator.injector.get(GlobalConfigService);\n\t\t\tif (globalConfig) {\n\t\t\t\tglobalConfigService.setUserColors(globalConfig.ColorList);\n\t\t\t\tglobalConfigService.setNodeStyles(globalConfigService.productionGlobalConfig.DisplayColor, true);\n\t\t\t} else {\n\t\t\t\tglobalConfigService.resetStyles();\n\t\t\t}\n\t\t}\n\t}\n\n\texport class GlobalConfig implements GlobalInterface.IGlobalConfig {\n\t\tDisplayColor: GlobalInterface.IColorObject = new GlobalClass.DisplayColor();\n\t}\n\n\texport class DisplayColor implements GlobalInterface.IColorObject {\n\t\tPrimary: ColorProvider   = null;\n\t\tSecondary: ColorProvider = null;\n\t\tSuccess: ColorProvider   = null;\n\t\tInfo: ColorProvider      = null;\n\t\tWarning: ColorProvider   = null;\n\t\tDanger: ColorProvider    = null;\n\t\tLight: ColorProvider     = null;\n\t\tDark: ColorProvider      = null;\n\t}\n\n\texport class ColorProvider {\n\n\t\tBase: string                      = null;\n\t\tBrighten: string                  = null;\n\t\tBrightenForShade: string          = null;\n\t\tDarken: string                    = null;\n\t\tDarkenForShade: string            = null;\n\t\tContrastColor: string             = null;\n\t\tTransparentDarkenVariance: string = null;\n\t\tBrightShade: string               = null;\n\t\tBrightWarmly: string              = null;\n\t\tIsBaseBright: boolean             = null;\n\n\n\t\tconstructor(_Color: string) {\n\t\t\tif (this.Base = this.isColor(_Color)) {\n\t\t\t\tthis.Brighten                  = this.brightness(this.Base, 'brighten', 25);\n\t\t\t\tthis.BrightenForShade          = this.brightness(this.Base, 'brighten', 10);\n\t\t\t\tthis.Darken                    = this.brightness(this.Base, 'darken', 20);\n\t\t\t\tthis.DarkenForShade            = this.brightness(this.Base, 'darken', 10);\n\t\t\t\tconst luminance                = Math.floor(this.luminance(this.Base) * 100);\n\t\t\t\tconst darken                   = luminance > 50 ? 5 : (luminance > 40 ? 10 : (luminance > 20 ? 15 : luminance));\n\t\t\t\tconst brighten                 = luminance > 55 ? 65 : (luminance > 45 ? 60 : (luminance > 20 ? 55 : (luminance > 10 ? 45 : 80)));\n\t\t\t\tthis.BrightShade               = this.brightness(this.brightness(this.Base, 'darken', darken), 'brighten', brighten);\n\t\t\t\tthis.BrightWarmly              = this.brightness(this.brightness(this.saturate(this.Base), 'darken', darken - 10), 'brighten', brighten - 5);\n\t\t\t\tthis.TransparentDarkenVariance = this.brightness(this.transparentize(this.Base, 80), 'darken', 40);\n\t\t\t\tif (this.isBright(this.Base)) {\n\t\t\t\t\tthis.ContrastColor = 'rgba(58,65,71,0.5)';\n\t\t\t\t\tthis.IsBaseBright  = true;\n\t\t\t\t} else {\n\t\t\t\t\tthis.ContrastColor = 'rgb(255,255,255, 0.7)';\n\t\t\t\t\tthis.IsBaseBright  = false;\n\t\t\t\t}\n\n\t\t\t\t/*\t       console.log('%c BrightShade ', `background: ${this.BrightShade}; color: ${this.ContrastColor}`, this.BrightShade);\n\t\t\t\t\t       console.log('%c BrightWarmly ', `background: ${this.BrightWarmly}; color: ${this.ContrastColor}`, this.BrightWarmly);\n\t\t\t\t\t\t   console.log('%c Brighten ', `background: ${this.Brighten}; color: ${this.ContrastColor}`, this.Brighten);\n\t\t\t\t\t\t   console.log('%c BrightenForShade ', `background: ${this.BrightenForShade}; color: ${this.ContrastColor}`, this.BrightenForShade);\n\t\t\t\t\t       console.log('%c Base ', `background: ${this.Base}; color: ${this.ContrastColor}`, this.Base);\n\t\t\t\t\t       console.log('%c DarkenForShade ', `background: ${this.DarkenForShade}; color: ${this.ContrastColor}`, this.DarkenForShade);\n\t\t\t\t\t       console.log('%c Darken ', `background: ${this.Darken}; color: ${this.ContrastColor}`, this.Darken);\n\t\t\t\t\t\t   console.log('%c TransparentDarkenVariance ', `background: ${this.TransparentDarkenVariance}; color: ${this.ContrastColor}`, this.TransparentDarkenVariance);\n\t\t\t*/\n\t\t\t}\n\t\t}\n\n\t\tsaturate(_Rgb: string) {\n\t\t\tconst rgbIntArray               = this.getRGBArray(_Rgb);\n\t\t\tconst greyVal                   = this.getLightnessOfRGB(_Rgb) * 55;\n\t\t\tconst [lowest, middle, highest] = this.getLowMidHi(rgbIntArray);\n\n\t\t\tif (lowest.val === highest.val) {\n\t\t\t\treturn _Rgb;\n\t\t\t}\n\n\t\t\tconst saturationRange  = Math.round(Math.min(255 - greyVal, greyVal));\n\t\t\tconst maxChange        = Math.min(255 - highest.val, lowest.val);\n\t\t\tconst changeAmount     = Math.min(saturationRange / 10, maxChange);\n\t\t\tconst middleValueRatio = (greyVal - middle.val) / (greyVal - highest.val) + 0.07;\n\n\t\t\tconst returnArray          = [];\n\t\t\treturnArray[highest.index] = Math.round(highest.val + changeAmount);\n\t\t\treturnArray[lowest.index]  = Math.round(lowest.val - changeAmount);\n\t\t\treturnArray[middle.index]  = Math.round(\n\t\t\t\tgreyVal + (returnArray[highest.index] - greyVal) * middleValueRatio + 5\n\t\t\t);\n\t\t\treturn `rgb(${[returnArray].join()})`;\n\t\t}\n\n\t\tpublic brightness(_Rgb: string, _Action: 'brighten' | 'darken', _Percentage: number): string {\n\t\t\tconst rgbIntArray               = this.getRGBArray(_Rgb);\n\t\t\tconst [lowest, middle, highest] = this.getLowMidHi(rgbIntArray);\n\n\t\t\tif (_Action === 'brighten' && lowest.val === 255) {\n\t\t\t\treturn _Rgb;\n\t\t\t}\n\n\t\t\tif (_Action === 'darken' && highest.val === 0) {\n\t\t\t\treturn _Rgb;\n\t\t\t}\n\n\t\t\tconst amount = _Percentage / 100 * 255;\n\n\t\t\tlet returnList = [];\n\n\t\t\tif (_Action === 'brighten') {\n\t\t\t\treturnList[lowest.index]  = Math.round(lowest.val + (Math.min(255 - lowest.val, amount)));\n\t\t\t\tconst increaseFraction    = (returnList[lowest.index] - lowest.val) / (255 - lowest.val);\n\t\t\t\treturnList[middle.index]  = middle.val + (255 - middle.val) * increaseFraction;\n\t\t\t\treturnList[highest.index] = highest.val + (255 - highest.val) * increaseFraction;\n\t\t\t}\n\t\t\tif (_Action === 'darken') {\n\t\t\t\treturnList[highest.index] = highest.val - (Math.min(highest.val, amount));\n\t\t\t\tconst decreaseFraction    = (highest.val - returnList[highest.index]) / (highest.val);\n\t\t\t\treturnList[middle.index]  = middle.val - middle.val * decreaseFraction;\n\t\t\t\treturnList[lowest.index]  = lowest.val - lowest.val * decreaseFraction;\n\t\t\t}\n\n\t\t\treturnList = returnList.map(item => Math.round(item));\n\t\t\tif (rgbIntArray.length > 3) {\n\t\t\t\treturnList.push(rgbIntArray[3]);\n\t\t\t\treturn (`rgba(${returnList.join()})`);\n\t\t\t}\n\t\t\treturn (`rgb(${returnList.join()})`);\n\t\t}\n\n\t\tgetLightnessOfRGB(_Rgb: string) {\n\t\t\tconst rgbIntArray = this.getRGBArray(_Rgb);\n\n\t\t\tconst highest = Math.max(...rgbIntArray);\n\t\t\tconst lowest  = Math.min(...rgbIntArray);\n\t\t\treturn (highest + lowest) / 2 / 255;\n\t\t}\n\n\t\tprivate isBright(_Rgb: string) {\n\t\t\treturn this.contrast(this.luminance(_Rgb));\n\t\t}\n\n\t\tprivate getLowMidHi(_RgbArray: number[]) {\n\t\t\tconst rgbArrayCopy         = _RgbArray.slice();\n\t\t\tconst rgbArrayWithoutAlpha = _RgbArray.length > 3 ? rgbArrayCopy.reverse().slice(1).reverse() : _RgbArray;\n\t\t\tlet highest                = {val: -1, index: -1};\n\t\t\tlet lowest                 = {val: Infinity, index: -1};\n\n\t\t\trgbArrayWithoutAlpha.map((val, index) => {\n\t\t\t\tif (val > highest.val) {\n\t\t\t\t\thighest = {val: val, index: index};\n\t\t\t\t}\n\t\t\t\tif (val < lowest.val) {\n\t\t\t\t\tlowest = {val: val, index: index};\n\t\t\t\t}\n\t\t\t});\n\n\t\t\tif (lowest.index === highest.index) {\n\t\t\t\tlowest.index = highest.index + 1;\n\t\t\t}\n\n\t\t\tconst middleIndex = (3 - highest.index - lowest.index);\n\t\t\tlet middle        = {val: rgbArrayWithoutAlpha[middleIndex], index: middleIndex};\n\t\t\treturn [lowest, middle, highest];\n\t\t}\n\n\t\tprivate contrast(_Luminance) {\n\t\t\tconst brightest = Math.max(1.05, _Luminance + 0.05);\n\t\t\tconst darkest   = Math.min(1.05, _Luminance + 0.05);\n\t\t\tconst contrast  = (brightest) / (darkest);\n\t\t\treturn contrast < 2.7;\n\t\t}\n\n\t\tprivate isColor(_StrColor) {\n\t\t\tconst CSSDeclaration = new Option().style;\n\t\t\tCSSDeclaration.color = _StrColor;\n\t\t\treturn !!CSSDeclaration.color ? CSSDeclaration.color : null;\n\t\t}\n\n\t\tprivate getRGBArray(_Rgb: string): number[] {\n\t\t\treturn _Rgb.replace(/^(rgb|rgba)\\(/, '').replace(/\\)$/, '').replace(/\\s/g, '').split(',').map(x => +x);\n\t\t}\n\n\t\tprivate luminance(_Rgb: string) {\n\t\t\tconst rgbIntArray = this.getRGBArray(_Rgb);\n\t\t\tconst W3algorithm = rgbIntArray.map(item => {\n\t\t\t\titem /= 255;\n\t\t\t\treturn item <= 0.03928\n\t\t\t\t\t? item / 12.92\n\t\t\t\t\t: Math.pow((item + 0.055) / 1.055, 2.4);\n\t\t\t});\n\t\t\treturn W3algorithm[0] * 0.2126 + W3algorithm[1] * 0.7152 + W3algorithm[2] * 0.0722;\n\t\t}\n\n\t\tprivate transparentize(_Rgb: string, _Percentage: number) {\n\t\t\tconst baseArray = this.Base.replace(/^(rgb|rgba)\\(/, '').replace(/\\)$/, '').replace(/\\s/g, '').split(',').map(x => +x);\n\t\t\tif (baseArray.length > 3) {\n\t\t\t\tbaseArray.pop();\n\t\t\t}\n\t\t\tconst amount = (100 - _Percentage) / 100;\n\t\t\tbaseArray.push(amount);\n\t\t\treturn (`rgb(${baseArray.join()})`);\n\t\t}\n\n\t}\n\n\texport class DataControl {\n\t\t/**\n\t\t * @ignore\n\t\t */\n\t\tpublic copyValuesFrom(_Data: any, _DestinationObject: any): any {\n\n\t\t\tif (typeof _Data !== 'object') {\n\t\t\t\treturn _DestinationObject;\n\t\t\t}\n\n\t\t\tconst dataKeys              = Object.keys(_Data);\n\t\t\tconst destinationObjectKeys = Object.keys(_DestinationObject);\n\n\t\t\tdataKeys.forEach(key => {\n\n\t\t\t\tif (destinationObjectKeys.find(tKey => tKey === key || tKey === '_' + key)) {\n\n\t\t\t\t\tif (key.includes('Date')) {\n\t\t\t\t\t\tconst date = Date.parse(_Data[key]);\n\t\t\t\t\t\tif (date) {\n\t\t\t\t\t\t\t_DestinationObject[key] = new Date(date);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tif (_Data[key] !== null) {\n\t\t\t\t\t\t\t\t_DestinationObject[key] = _Data[key];\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (_Data[key] !== null) {\n\t\t\t\t\t\t\t_DestinationObject[key] = _Data[key];\n\t\t\t\t\t\t}\n\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\n\t\t\treturn _DestinationObject;\n\t\t}\n\t}\n\n\texport class Timer {\n\t\tTimePassed: number = 0;\n\t\tTimer: any;\n\t\tProgress: number   = 0;\n\t\tRemaining: number  = 100;\n\t\tMilliseconds: number;\n\n\t\tconstructor() {\n\t\t}\n\n\t\tsetMilliseconds(_Milliseconds: number) {\n\t\t\tthis.Milliseconds = _Milliseconds;\n\t\t}\n\n\t\treset(): void {\n\t\t\tthis.TimePassed = 0;\n\t\t\tthis.Progress   = 0;\n\t\t}\n\n\n\t\tpause(): void {\n\t\t\tthis.TimePassed = 0;\n\t\t\tthis.Progress   = 0;\n\t\t}\n\n\t\tstop(): void {\n\t\t\tthis.TimePassed = 0;\n\t\t\tclearInterval(this.Timer);\n\t\t}\n\n\t\tstart(): void {\n\t\t\tthis.Timer = setInterval(() => {\n\t\t\t\tif (this.TimePassed >= this.Milliseconds) {\n\t\t\t\t\tclearInterval(this.Timer);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t\tthis.TimePassed += 100;\n\t\t\t\tthis.Progress  = this.TimePassed * 100 / this.Milliseconds;\n\t\t\t\tthis.Remaining = 100 - this.Progress;\n\n\t\t\t}, 100);\n\t\t}\n\t}\n}\n","import {Inject, Injectable} from '@angular/core';\nimport {DialogLayoutDisplay} from '../../../core/enums';\nimport {GlobalClass} from '../../../core/global';\nimport {ConfirmBoxClass, ConfirmBoxInterface} from './model';\n\n@Injectable({\n\tprovidedIn: 'root'\n})\nexport class ConfirmBoxConfigService {\n\n\tauthorConfig: ConfirmBoxInterface.IConfirmBoxUserConfig     = new ConfirmBoxClass.Settings();\n\tproductionConfig: ConfirmBoxInterface.IConfirmBoxUserConfig = new ConfirmBoxClass.Settings();\n\n\tconstructor(@Inject('confirmBoxConfig') private userConfig: ConfirmBoxInterface.IConfirmBoxUserConfig = {}) {\n\n\t\t// region *** confirmBox userConfig (user input app-module) ***\n\t\tconst userConfigBase = new ConfirmBoxClass.Settings();\n\t\tconst dataControl    = new GlobalClass.DataControl();\n\t\tdataControl.copyValuesFrom(userConfig.ConfirmBoxCoreConfig, userConfigBase.ConfirmBoxCoreConfig); // this will make sure that object has right properties\n\t\tuserConfig.ConfirmBoxCoreConfig = userConfigBase.ConfirmBoxCoreConfig;\n\t\t// endregion\n\n\t\t// region *** author default config values (if there is no user input) ***\n\t\tthis.authorConfig.ConfirmBoxCoreConfig.Width            = 'auto';\n\t\tthis.authorConfig.ConfirmBoxCoreConfig.Height           = 'auto';\n\t\tthis.authorConfig.ConfirmBoxCoreConfig.ButtonPosition   = 'center';\n\t\tthis.authorConfig.ConfirmBoxCoreConfig.ConfirmLabel     = 'Confirm';\n\t\tthis.authorConfig.ConfirmBoxCoreConfig.DeclineLabel     = 'Decline';\n\t\tthis.authorConfig.ConfirmBoxCoreConfig.DisableIcon      = false;\n\t\tthis.authorConfig.ConfirmBoxCoreConfig.AllowHTMLMessage = false;\n\t\tthis.authorConfig.ConfirmBoxCoreConfig.LayoutType       = DialogLayoutDisplay.NONE;\n\n\t\t// endregion\n\n\t\t// region *** Production setup ***\n\t\tdataControl.copyValuesFrom(this.authorConfig.ConfirmBoxCoreConfig, this.productionConfig.ConfirmBoxCoreConfig);\n\t\tdataControl.copyValuesFrom(userConfig.ConfirmBoxCoreConfig, this.productionConfig.ConfirmBoxCoreConfig);\n\t\t// endregion\n\n\t}\n}\n","import {InjectFlags, InjectionToken, Injector, Type} from '@angular/core';\n\nexport class DialogInjector implements Injector {\n\tconstructor(\n\t\tprivate ParentInjector: Injector,\n\t\tprivate AdditionalTokens: WeakMap<any, any>\n\t) {\n\t}\n\n\tget<T>(\n\t\ttoken: Type<T> | InjectionToken<T>,\n\t\tnotFoundValue?: T,\n\t\tflags?: InjectFlags\n\t): T;\n\tget(token: any, notFoundValue?: any): any;\n\tget(token: any, notFoundValue?: any, flags?: any): any {\n\t\tconst value = this.AdditionalTokens.get(token);\n\n\t\tif (value) {\n\t\t\treturn value;\n\t\t}\n\n\t\treturn this.ParentInjector.get<any>(token, notFoundValue);\n\t}\n}\n","import {animate, state, style, transition, trigger} from '@angular/animations';\n\n\nexport function fadeInOut(_OpacityMin = 0, _OpacityMax = 1) {\n\n\treturn trigger('fadeInOut', [\n\t\t// ...\n\t\tstate('open', style({\n\t\t\topacity: _OpacityMax\n\t\t})),\n\t\tstate('closed', style({\n\t\t\topacity: _OpacityMin\n\t\t})),\n\t\ttransition('* => close-fast', [\n\t\t\tanimate('0.1s')\n\t\t]),\n\t\ttransition('* => open', [\n\t\t\tanimate('0.2s')\n\t\t]),\n\t\ttransition('* => close-slow', [\n\t\t\tanimate('1.3s')\n\t\t]),\n\t\ttransition('* => close-instant', [\n\t\t\tanimate('0s')\n\t\t])\n\t]);\n}\n","import {AfterViewInit, ChangeDetectorRef, Component} from '@angular/core';\nimport {Observable, Observer} from 'rxjs';\nimport {delay} from 'rxjs/operators';\nimport {fadeInOut} from '../../../core/animations';\nimport {GlobalInterface} from '../../../core/global';\nimport {ConfirmBoxClass} from '../core/model';\n\n@Component({\n\tselector   : 'app-confirm-box-wrapper',\n\ttemplateUrl: './confirm-box-wrapper.component.html',\n\tstyleUrls  : ['./confirm-box-wrapper.component.scss'],\n\tanimations : [fadeInOut(0, 1)]\n})\nexport class ConfirmBoxWrapperComponent implements AfterViewInit {\n\tfadeInOutAnimation: string = 'open';\n\n\tconstructor(\n\t\tpublic confirmBoxBelonging: ConfirmBoxClass.ConfirmBoxBelonging,\n\t\tprivate cd: ChangeDetectorRef\n\t) {\n\t}\n\n\tngAfterViewInit(): void {\n\t\tthis.setResponse(false);\n\t\tthis.cd.detectChanges();\n\t}\n\n\tsetResponse(_IsSuccess: boolean, _ClickedButtonID?: string): void {\n\t\tconst response = new ConfirmBoxClass.ConfirmBoxDefaultResponse();\n\t\tif (_ClickedButtonID) {\n\t\t\tresponse.ClickedButtonID = _ClickedButtonID;\n\t\t}\n\n\t\tresponse.setSuccess(_IsSuccess);\n\t\tresponse.setBelonging(this.confirmBoxBelonging);\n\t\tthis.confirmBoxBelonging.EventsController.setDefaultResponse(response);\n\t}\n\n\tonOverlayClicked(evt: MouseEvent): void {\n\t\t// console.log('onOverlayClicked');\n\t}\n\n\tonCustomButton(_Button: GlobalInterface.IButton): void {\n\t\tthis.confirmBoxBelonging.EventsController.onButtonClick(_Button);\n\t\tthis.setResponse(true, _Button.ID);\n\t\tthis.confirmBoxBelonging.EventsController.close();\n\t}\n\n\tonButtonClick(_Type: 'confirm' | 'decline') {\n\n\t\tlet buttonID;\n\t\tif (_Type === 'confirm') {\n\t\t\tbuttonID = this.confirmBoxBelonging.ConfirmBoxCoreConfig.ConfirmLabel.toLowerCase();\n\t\t} else if (_Type === 'decline') {\n\t\t\tbuttonID = this.confirmBoxBelonging.ConfirmBoxCoreConfig.DeclineLabel.toLowerCase();\n\t\t}\n\n\t\tthis.setResponse(_Type === 'confirm', buttonID);\n\n\n\t\tthis.confirmBoxBelonging.EventsController.close();\n\t}\n\n\tcloseParent$(_ClosingAnimation: string): Observable<any> {\n\t\tthis.fadeInOutAnimation = _ClosingAnimation;\n\t\tconst timer             = _ClosingAnimation === 'close-slow' ? 1400 : 150;\n\n\t\treturn new Observable((observer: Observer<any>) => {\n\t\t\tobserver.next('');\n\t\t\tobserver.complete();\n\t\t}).pipe(delay(timer));\n\t}\n}\n","import {ApplicationRef, ComponentFactoryResolver, ComponentRef, EmbeddedViewRef, Injectable, Injector} from '@angular/core';\nimport {map} from 'rxjs/operators';\nimport {DialogInjector} from '../../../core/dialog-injector';\nimport {ConfirmBoxWrapperComponent} from '../confirm-box-wrapper/confirm-box-wrapper.component';\nimport {ConfirmBoxClass} from './model';\n\n@Injectable({\n\tprovidedIn: 'root'\n})\nexport class ConfirmBoxService {\n\n\tconfirmBoxComponentRefList: ComponentRef<ConfirmBoxWrapperComponent>[] = [];\n\n\tconstructor(private componentFactoryResolver: ComponentFactoryResolver, private injector: Injector, private appRef: ApplicationRef) {\n\t}\n\n\topen(_ConfirmBoxBelonging: ConfirmBoxClass.ConfirmBoxBelonging): ConfirmBoxClass.ConfirmBoxEventsController {\n\t\tconst dialogController = _ConfirmBoxBelonging.EventsController;\n\t\tconst componentRef     = this.getComponentRef(dialogController, _ConfirmBoxBelonging);\n\n\t\tthis.confirmBoxComponentRefList.push(componentRef);\n\t\tcomponentRef.instance.confirmBoxBelonging = _ConfirmBoxBelonging;\n\n\t\tthis.appendToBodyParentComponent(componentRef);\n\n\t\tthis.listeners(dialogController);\n\n\t\treturn dialogController;\n\n\t}\n\n\tgetComponentRef(_EventsController: ConfirmBoxClass.ConfirmBoxEventsController, _ConfirmBoxBelonging: ConfirmBoxClass.ConfirmBoxBelonging): ComponentRef<any> | null {\n\t\tlet componentFactory;\n\n\t\tconst dialogIndex = this.findDialogIndex(_ConfirmBoxBelonging.EntityUniqueID);\n\t\tif (dialogIndex === -1) {\n\n\t\t\tconst weakMap = new WeakMap();\n\t\t\tweakMap.set(ConfirmBoxClass.ConfirmBoxEventsController, _EventsController);\n\n\t\t\tcomponentFactory = this.componentFactoryResolver.resolveComponentFactory(ConfirmBoxWrapperComponent);\n\t\t\treturn componentFactory.create(new DialogInjector(this.injector, weakMap));\n\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tlisteners(_EventsController: ConfirmBoxClass.ConfirmBoxEventsController) {\n\n\t\t// Listener for closing dialog\n\t\tconst closeDialogSubscription = _EventsController.afterClosed$.subscribe((response) => {\n\t\t\tconst modalIndex = this.findDialogIndex(response.confirmBoxBelonging.EntityUniqueID);\n\t\t\tthis.removeFromBodyParentComponent(modalIndex);\n\t\t\tcloseDialogSubscription.unsubscribe();\n\t\t});\n\n\t}\n\n\n\tappendToBodyParentComponent(_ComponentRef: ComponentRef<any>): void {\n\n\t\t// attach view to ignite lifecycle hooks\n\t\tthis.appRef.attachView(_ComponentRef.hostView);\n\n\t\t// DOM\n\t\tconst domElem = (_ComponentRef.hostView as EmbeddedViewRef<any>).rootNodes[0] as HTMLElement;\n\t\tdocument.body.appendChild(domElem);\n\n\t}\n\n\tcloseDialogWrapperComponent(_DialogUniqueID: string) {\n\t\tconst modalIndex = this.findDialogIndex(_DialogUniqueID);\n\t\tthis.removeFromBodyParentComponent(modalIndex);\n\t}\n\n\tremoveFromBodyParentComponent(_DialogIndex: number): void {\n\t\tif (_DialogIndex > -1) {\n\t\t\tthis.confirmBoxComponentRefList[_DialogIndex].instance.closeParent$('close-fast').pipe(map(item => {\n\t\t\t\tthis.appRef.detachView(this.confirmBoxComponentRefList[_DialogIndex].hostView);\n\t\t\t\tthis.confirmBoxComponentRefList[_DialogIndex].destroy();\n\t\t\t\tthis.confirmBoxComponentRefList.splice(_DialogIndex, 1);\n\t\t\t})).subscribe();\n\t\t}\n\t}\n\n\tfindDialogIndex(_DialogUniqueID: string): number {\n\t\treturn this.confirmBoxComponentRefList.findIndex((item) => {\n\t\t\treturn _DialogUniqueID === item.instance.confirmBoxBelonging.EntityUniqueID;\n\t\t});\n\t}\n}\n","import {Observable, Subject} from 'rxjs';\nimport {map} from 'rxjs/operators';\nimport {DialogLayoutDisplay, VerticalPosition} from '../../../core/enums';\nimport {GlobalClass, GlobalInterface} from '../../../core/global';\nimport {ServiceLocator} from '../../../locator.service';\nimport {ConfirmBoxConfigService} from './confirm-box-config.service';\nimport {ConfirmBoxService} from './confirm-box-service';\n\nexport namespace ConfirmBoxInterface {\n\n\texport interface IConfirmBoxUserConfig {\n\t\tButtons?: GlobalInterface.IButton[];\n\t\tConfirmBoxCoreConfig?: ConfirmBoxInterface.IConfirmBoxCoreConfig;\n\t\tDispatch?: GlobalInterface.IDispatch;\n\t}\n\n\texport interface IConfirmBoxCoreConfig {\n\t\t/** Fixed popup width */\n\t\tWidth?: string;\n\t\t/** Fixed popup height */\n\t\tHeight?: string;\n\t\tButtonPosition?: VerticalPosition;\n\t\tLayoutType?: DialogLayoutDisplay;\n\t\tDispatch?: GlobalInterface.IDispatch;\n\t\tConfirmLabel?: string;\n\t\tDeclineLabel?: string;\n\t\tDisableIcon?: boolean;\n\t\tAllowHTMLMessage?: boolean;\n\t}\n\n\texport interface IConfirmBoxBelonging {\n\t\tButtons: GlobalInterface.IButton[];\n\t\tConfirmBoxCoreConfig: ConfirmBoxInterface.IConfirmBoxCoreConfig;\n\t\tEntityUniqueID: string;\n\t\tEventsController: ConfirmBoxClass.ConfirmBoxEventsController;\n\t}\n\n\texport interface IConfirmBoxResponse {\n\n\t\tsetSuccess(_IsSuccess: boolean): void;\n\n\t\tsetClickedButtonID(_ClickedButtonID): void;\n\n\t}\n\n\texport interface IConfirmBoxPublicResponse {\n\t\tSuccess: boolean;\n\t\tClickedButtonID: string\n\t}\n\n\texport interface IPrivateResponseMerged extends IConfirmBoxResponse, GlobalInterface.IPrivateResponse {\n\n\t\tconfirmBoxBelonging: ConfirmBoxInterface.IConfirmBoxBelonging;\n\t}\n\n}\n\nexport namespace ConfirmBoxClass {\n\n\t// region *** Public ***\n\n\n\texport class ConfirmBoxInitializer {\n\t\t/** @internal */\n\t\tprivate confirmBoxCarrier: ConfirmBoxClass.ConfirmBoxCarrier = new ConfirmBoxClass.ConfirmBoxCarrier();\n\n\t\tconstructor() {\n\t\t}\n\n\t\topenConfirmBox$(): Observable<ConfirmBoxInterface.IConfirmBoxPublicResponse> {\n\t\t\treturn this.confirmBoxCarrier.openConfirmBox$().pipe(map(resp => {\n\t\t\t\tconst basicConfirmBoxResponse = new ConfirmBoxResponse();\n\t\t\t\tconst dataControl             = new GlobalClass.DataControl();\n\t\t\t\tdataControl.copyValuesFrom(resp, basicConfirmBoxResponse);\n\t\t\t\treturn basicConfirmBoxResponse;\n\t\t\t}));\n\t\t}\n\n\t\tsetButtons(_Buttons: GlobalInterface.IButton[]): void {\n\t\t\tthis.confirmBoxCarrier.setButtons(_Buttons);\n\t\t}\n\n\t\tsetConfig(_ConfirmBoxCoreConfig: ConfirmBoxInterface.IConfirmBoxCoreConfig) {\n\t\t\tthis.confirmBoxCarrier.setConfig(_ConfirmBoxCoreConfig);\n\t\t}\n\n\t\tsetDispatch(_Title: string, _Message: string = null): void {\n\t\t\tthis.confirmBoxCarrier.setTitle(_Title);\n\t\t\tthis.confirmBoxCarrier.setMessage(_Message);\n\t\t}\n\n\t\tsetTitle(_Title: string): void {\n\t\t\tthis.confirmBoxCarrier.setTitle(_Title);\n\t\t}\n\n\t\tsetMessage(_Message: string): void {\n\t\t\tthis.confirmBoxCarrier.setMessage(_Message);\n\t\t}\n\n\t\tsetButtonLabels(_Confirm: string, _Decline?: string): void {\n\t\t\tthis.confirmBoxCarrier.setButtonLabels(_Confirm, _Decline);\n\t\t}\n\n\t}\n\n\texport class ConfirmBoxResponse extends GlobalClass.DataControl implements ConfirmBoxInterface.IConfirmBoxResponse, ConfirmBoxInterface.IConfirmBoxPublicResponse {\n\t\t// private Response: DialogPrepareResponse            = new DialogPrepareResponse();\n\n\t\tSuccess: boolean        = null;\n\t\tClickedButtonID: string = null;\n\n\t\tconstructor() {\n\t\t\tsuper();\n\t\t}\n\n\t\tsetSuccess(_IsSuccess: boolean): void {\n\t\t\tthis.Success = _IsSuccess;\n\t\t}\n\n\t\tsetClickedButtonID(_ClickedButtonID): void {\n\t\t\tthis.ClickedButtonID = _ClickedButtonID;\n\t\t}\n\n\n\t}\n\n\texport class ConfirmBoxEventsController {\n\n\t\tdefaultResponse: ConfirmBoxInterface.IPrivateResponseMerged;\n\n\t\tprivate readonly _afterClosed: Subject<ConfirmBoxInterface.IPrivateResponseMerged> = new Subject<ConfirmBoxInterface.IPrivateResponseMerged>();\n\t\tafterClosed$: Observable<ConfirmBoxInterface.IPrivateResponseMerged>               = this._afterClosed.asObservable();\n\n\n\t\tprivate readonly _onButtonClick: Subject<GlobalInterface.IButton> = new Subject<GlobalInterface.IButton>();\n\t\tonButtonClick$: Observable<GlobalInterface.IButton>               = this._onButtonClick.asObservable();\n\t\tprivate readonly _buttonList: Subject<GlobalInterface.IButton[]>  = new Subject<GlobalInterface.IButton[]>();\n\t\tbuttonList$: Observable<GlobalInterface.IButton[]>                = this._buttonList.asObservable();\n\n\t\tconstructor(private EntityUniqueID: string) {\n\t\t}\n\n\n\t\tclose(_Response?: ConfirmBoxInterface.IPrivateResponseMerged): void {\n\t\t\tconst response = _Response ? _Response : this.defaultResponse;\n\t\t\tthis._afterClosed.next(response);\n\t\t}\n\n\t\tonButtonClick(_Button: GlobalInterface.IButton): void {\n\t\t\tthis.defaultResponse.setClickedButtonID(_Button.ID);\n\t\t\tthis._onButtonClick.next(_Button);\n\t\t}\n\n\t\tsetButtonList(_ButtonList: GlobalInterface.IButton[]): void {\n\t\t\tthis._buttonList.next(_ButtonList);\n\t\t}\n\n\t\tsetDefaultResponse(_Response: ConfirmBoxInterface.IPrivateResponseMerged): void {\n\t\t\tthis.defaultResponse = _Response;\n\t\t}\n\t}\n\n\t// endregion\n\n\texport class ConfirmBoxDefaultResponse extends ConfirmBoxResponse implements ConfirmBoxInterface.IPrivateResponseMerged {\n\t\tconfirmBoxBelonging: ConfirmBoxBelonging = null;\n\n\t\tconstructor() {\n\t\t\tsuper();\n\t\t}\n\n\t\tsetBelonging(_ConfirmBoxBelonging): void {\n\t\t\tthis.confirmBoxBelonging = _ConfirmBoxBelonging;\n\t\t}\n\n\t}\n\n\texport class ConfirmBoxCarrier {\n\n\t\tconfirmBoxBelonging: ConfirmBoxClass.ConfirmBoxBelonging = new ConfirmBoxClass.ConfirmBoxBelonging();\n\n\t\tconstructor() {\n\t\t}\n\n\t\tsetButtons(_Buttons: GlobalInterface.IButton[]) {\n\t\t\tif (_Buttons.length) {\n\t\t\t\tthis.confirmBoxBelonging.Buttons = _Buttons;\n\t\t\t}\n\t\t}\n\n\t\tsetTitle(_Title: string): void {\n\t\t\tthis.confirmBoxBelonging.Dispatch.Title = _Title;\n\t\t}\n\n\t\tsetMessage(_Message: string): void {\n\t\t\tthis.confirmBoxBelonging.Dispatch.Message = _Message;\n\t\t}\n\n\n\t\tsetButtonLabels(_Confirm: string, _Decline: string): void {\n\t\t\tthis.confirmBoxBelonging.ConfirmBoxCoreConfig.ConfirmLabel = _Confirm;\n\t\t\tthis.confirmBoxBelonging.ConfirmBoxCoreConfig.DeclineLabel = _Decline;\n\t\t}\n\n\t\tsetConfig(_ConfirmBoxBelonging: ConfirmBoxInterface.IConfirmBoxCoreConfig) {\n\t\t\t// region *** local UserConfig (defined on place where dialog is called) ***\n\t\t\tconst dataControl = new GlobalClass.DataControl();\n\t\t\tdataControl.copyValuesFrom(_ConfirmBoxBelonging, this.confirmBoxBelonging.ConfirmBoxCoreConfig);\n\t\t\t// endregion\n\t\t}\n\n\t\topenConfirmBox$(): Observable<ConfirmBoxInterface.IPrivateResponseMerged> {\n\t\t\tconst service: ConfirmBoxService = ServiceLocator.injector.get(ConfirmBoxService);\n\t\t\tconst confirmBoxController       = service.open(this.confirmBoxBelonging);\n\t\t\treturn confirmBoxController.afterClosed$;\n\t\t}\n\n\t}\n\n\texport class Settings {\n\t\tButtons: GlobalInterface.IButton[]                              = [];\n\t\tConfirmBoxCoreConfig: ConfirmBoxInterface.IConfirmBoxCoreConfig = new ConfirmBoxCoreConfig();\n\t\tDispatch: GlobalInterface.IDispatch                             = new GlobalClass.Dispatch();\n\t}\n\n\texport class ConfirmBoxCoreConfig implements ConfirmBoxInterface.IConfirmBoxCoreConfig {\n\t\tWidth: string                       = null;\n\t\tHeight: string                      = null;\n\t\tButtonPosition: VerticalPosition    = null;\n\t\tLayoutType: DialogLayoutDisplay     = null;\n\t\tDispatch: GlobalInterface.IDispatch = null;\n\t\tConfirmLabel: string                = null;\n\t\tDeclineLabel: string                = null;\n\t\tDisableIcon: boolean                = null;\n\t\tAllowHTMLMessage: boolean           = null;\n\t}\n\n\texport class ConfirmBoxBelonging extends ConfirmBoxClass.Settings implements ConfirmBoxInterface.IConfirmBoxBelonging {\n\n\t\tEntityUniqueID: string = 'C' + Math.random().toString(36).substr(2, 9);\n\t\tEventsController: ConfirmBoxEventsController;\n\n\t\tconstructor() {\n\t\t\tsuper();\n\t\t\tthis.EventsController                                     = new ConfirmBoxEventsController(this.EntityUniqueID);\n\t\t\tconst ConfirmBoxCoreConfigurator: ConfirmBoxConfigService = ServiceLocator.injector.get(ConfirmBoxConfigService);\n\t\t\tconst baseSettings                                        = new ConfirmBoxClass.Settings();\n\t\t\tconst dataControl                                         = new GlobalClass.DataControl();\n\t\t\tdataControl.copyValuesFrom(ConfirmBoxCoreConfigurator.productionConfig.ConfirmBoxCoreConfig, baseSettings.ConfirmBoxCoreConfig);\n\t\t\tthis.ConfirmBoxCoreConfig = baseSettings.ConfirmBoxCoreConfig;\n\t\t\tthis.Buttons              = ConfirmBoxCoreConfigurator.productionConfig.Buttons.slice();\n\t\t}\n\n\t}\n\n\n}\n","import {Inject, Injectable} from '@angular/core';\nimport {DialogLayoutDisplay} from '../../../core/enums';\nimport {GlobalClass} from '../../../core/global';\nimport {ToastNotificationClass, ToastNotificationInterface, ToastPositionEnum, ToastProgressBarEnum, ToastUserViewTypeEnum} from './model';\n\n@Injectable({\n\tprovidedIn: 'root'\n})\nexport class ToastNotificationConfigService {\n\n\tauthorConfig: ToastNotificationInterface.IToastNotificationUserConfig     = new ToastNotificationClass.Settings();\n\tproductionConfig: ToastNotificationInterface.IToastNotificationUserConfig = new ToastNotificationClass.Settings();\n\tprivate dataControl                                                       = new GlobalClass.DataControl();\n\n\tconstructor(@Inject('toastNotificationConfig') private userConfig: ToastNotificationInterface.IToastNotificationUserConfig = {}) {\n\n\t\t// region *** confirmBox userConfig (user input app-module) ***\n\t\tconst userConfigBase = new ToastNotificationClass.Settings();\n\n\t\tthis.dataControl.copyValuesFrom(userConfig.ToastCoreConfig, userConfigBase.ToastCoreConfig); // this will make sure that object has right properties\n\n\t\tuserConfig.ToastCoreConfig = userConfigBase.ToastCoreConfig;\n\t\t// endregion\n\n\t\t// region *** author default config values (if there is no user input) ***\n\t\tthis.authorConfig.ToastCoreConfig.ButtonPosition            = 'right';\n\t\tthis.authorConfig.ToastCoreConfig.TextPosition              = 'left';\n\t\tthis.authorConfig.ToastCoreConfig.ToastPosition             = ToastPositionEnum.TOP_RIGHT;\n\t\tthis.authorConfig.ToastCoreConfig.ProgressBar               = ToastProgressBarEnum.INCREASE;\n\t\tthis.authorConfig.ToastCoreConfig.ToastUserViewType         = ToastUserViewTypeEnum.STANDARD;\n\t\tthis.authorConfig.ToastCoreConfig.AutoCloseDelay            = 2500;\n\t\tthis.authorConfig.ToastCoreConfig.DisableIcon               = false;\n\t\tthis.authorConfig.ToastCoreConfig.AllowHTMLMessage          = true;\n\t\tthis.authorConfig.ToastCoreConfig.LayoutType                = DialogLayoutDisplay.NONE;\n\t\tthis.authorConfig.GlobalSettings.AllowedNotificationsAtOnce = 5;\n\n\t\t// endregion\n\n\t\t// region *** Production setup ***\n\n\t\tthis.setResetGlobalToastConfig();\n\t\tthis.dataControl.copyValuesFrom(this.authorConfig.ToastCoreConfig, this.productionConfig.ToastCoreConfig);\n\t\tthis.dataControl.copyValuesFrom(this.userConfig.ToastCoreConfig, this.productionConfig.ToastCoreConfig);\n\t\t// endregion\n\n\n\t}\n\n\tsetResetGlobalToastConfig(globalToastConfig?: ToastNotificationInterface.IGlobalToastSettings): void {\n\t\tthis.dataControl.copyValuesFrom(this.authorConfig.GlobalSettings, this.productionConfig.GlobalSettings);\n\t\tthis.dataControl.copyValuesFrom(globalToastConfig ? globalToastConfig : this.userConfig.GlobalSettings, this.productionConfig.GlobalSettings);\n\t}\n}\n","import {Directive, OnDestroy} from '@angular/core';\nimport {BehaviorSubject, Observable, of, Subscription} from 'rxjs';\nimport {delay, tap} from 'rxjs/operators';\nimport {GlobalClass, GlobalInterface} from '../../../core/global';\nimport {ToastNotificationClass} from './model';\n\n@Directive()\nexport abstract class WrapperAbstraction implements OnDestroy {\n\n\tfadeInOutAnimation: string = 'open';\n\ttimerStarted$              = new BehaviorSubject('start-counter');\n\tsubsToClosingDelay: Subscription;\n\tsubTimer: Subscription;\n\tisTimerStarted             = false;\n\ttimeout;\n\ttimer: GlobalClass.Timer   = new GlobalClass.Timer();\n\n\tprotected constructor(\n\t\tpublic toastNotificationBelonging: ToastNotificationClass.ToastNotificationBelonging\n\t) {\n\t}\n\n\tmouseOver() {\n\t\tthis.timerStarted$.next('stop-counter');\n\t\tthis.fadeInOutAnimation = 'open';\n\t\tthis.subsToClosingDelay?.unsubscribe();\n\t}\n\n\tmouseOut() {\n\t\tthis.timerStarted$.next('start-counter');\n\t}\n\n\n\tonOverlayClicked(evt: MouseEvent): void {\n\t\t//  console.log('onOverlayClicked');\n\t}\n\n\n\tonToastClicked(evt: MouseEvent): void {\n\t\t// console.log('onOverlayClicked');\n\t}\n\n\tsetResponse(_IsSuccess: boolean, _ClickedButtonID?: string): void {\n\t\tconst response = new ToastNotificationClass.ToastNotificationDefaultResponse();\n\t\tif (_ClickedButtonID) {\n\t\t\tresponse.ClickedButtonID = _ClickedButtonID;\n\t\t}\n\n\t\tresponse.setSuccess(_IsSuccess);\n\t\tresponse.setBelonging(this.toastNotificationBelonging);\n\t\tthis.toastNotificationBelonging.EventsController.setDefaultResponse(response);\n\t}\n\n\tonCustomButton(_Button: GlobalInterface.IButton): void {\n\t\tthis.toastNotificationBelonging.EventsController.onButtonClick(_Button);\n\t\tthis.setResponse(true, _Button.ID);\n\t\tthis.toastNotificationBelonging.EventsController.close();\n\t}\n\n\tonButtonClick(_Type: 'confirm' | 'decline') {\n\n\t\tlet buttonID;\n\t\tif (_Type === 'confirm') {\n\t\t\tbuttonID = this.toastNotificationBelonging.ToastCoreConfig.ConfirmLabel.toLowerCase();\n\t\t} else if (_Type === 'decline') {\n\t\t\tbuttonID = this.toastNotificationBelonging.ToastCoreConfig.DeclineLabel.toLowerCase();\n\t\t}\n\n\t\tthis.setResponse(_Type === 'confirm', buttonID);\n\t\tthis.toastNotificationBelonging.EventsController.close();\n\t}\n\n\tautoClose() {\n\t\tif (this.autoCloseCondition()) {\n\t\t\tthis.timer.setMilliseconds(this.toastNotificationBelonging.ToastCoreConfig.AutoCloseDelay);\n\t\t\tthis.subTimer = this.timerStarted$.pipe(\n\t\t\t\ttap((next) => {\n\t\t\t\t\tif ('start-counter' === next) {\n\t\t\t\t\t\tthis.timer.start();\n\t\t\t\t\t\tthis.isTimerStarted = true;\n\t\t\t\t\t\tthis.timeout        = setTimeout(() => {\n\t\t\t\t\t\t\tthis.subsToClosingDelay = this.closeParent$('close-slow').subscribe(resp => {\n\t\t\t\t\t\t\t\tthis.toastNotificationBelonging.EventsController.close();\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}, this.toastNotificationBelonging.ToastCoreConfig.AutoCloseDelay);\n\t\t\t\t\t} else if ('stop-counter' === next) {\n\t\t\t\t\t\tif (this.isTimerStarted) {\n\t\t\t\t\t\t\tthis.timer.stop();\n\t\t\t\t\t\t\tclearTimeout(this.timeout);\n\t\t\t\t\t\t\tthis.isTimerStarted = false;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t).subscribe();\n\t\t}\n\t}\n\n\tautoCloseCondition(): boolean {\n\t\treturn this.toastNotificationBelonging.ToastCoreConfig.AutoCloseDelay\n\t\t\t&& !(this.toastNotificationBelonging.Buttons.length\n\t\t\t\t|| this.toastNotificationBelonging.ToastCoreConfig.DeclineLabel\n\t\t\t\t|| this.toastNotificationBelonging.ToastCoreConfig.ConfirmLabel);\n\t}\n\n\tcloseParent$(_ClosingAnimation: string): Observable<any> {\n\t\tthis.fadeInOutAnimation = _ClosingAnimation;\n\t\tconst timer             = _ClosingAnimation === 'close-slow' ? 1400 : 150;\n\t\treturn of('').pipe(delay(timer));\n\t}\n\n\tclose() {\n\n\t\tthis.toastNotificationBelonging.EventsController.close();\n\t}\n\n\tngOnDestroy() {\n\t\tthis.subsToClosingDelay?.unsubscribe();\n\t\tthis.subTimer?.unsubscribe();\n\t}\n\n}\n","import {AfterViewInit, ChangeDetectorRef, Component} from '@angular/core';\nimport {fadeInOut} from '../../../core/animations';\nimport {GlobalConfigService} from '../../../core/global-config.service';\nimport {ToastNotificationClass} from '../core/model';\nimport {WrapperAbstraction} from '../core/wrapper-abstraction';\n\n@Component({\n\tselector   : 'app-toast-notification-simple-wrapper',\n\ttemplateUrl: './toast-notification-simple-wrapper.component.html',\n\tstyleUrls  : ['./toast-notification-simple-wrapper.component.scss'],\n\tanimations : [fadeInOut(0, 1)]\n})\nexport class ToastNotificationSimpleWrapperComponent extends WrapperAbstraction implements AfterViewInit {\n\n\tconstructor(\n\t\tpublic gConfig: GlobalConfigService,\n\t\tpublic toastNotificationBelonging: ToastNotificationClass.ToastNotificationBelonging,\n\t\tprivate cd: ChangeDetectorRef) {\n\t\tsuper(toastNotificationBelonging);\n\t}\n\n\tngAfterViewInit(): void {\n\t\tthis.setResponse(false);\n\t\tthis.cd.detectChanges();\n\t\tthis.autoClose();\n\t}\n\n}\n","import {AfterViewInit, ChangeDetectorRef, Component} from '@angular/core';\nimport {fadeInOut} from '../../../core/animations';\nimport {GlobalConfigService} from '../../../core/global-config.service';\nimport {ToastNotificationClass} from '../core/model';\nimport {WrapperAbstraction} from '../core/wrapper-abstraction';\n\n@Component({\n\tselector   : 'app-toast-notification-wrapper',\n\ttemplateUrl: './toast-notification-wrapper.component.html',\n\tstyleUrls  : ['./toast-notification-wrapper.component.scss'],\n\tanimations : [fadeInOut(0, 1)]\n})\nexport class ToastNotificationWrapperComponent extends WrapperAbstraction implements AfterViewInit {\n\n\tconstructor(\n\t\tpublic gConfig: GlobalConfigService,\n\t\tpublic toastNotificationBelonging: ToastNotificationClass.ToastNotificationBelonging,\n\t\tprivate cd: ChangeDetectorRef) {\n\t\tsuper(toastNotificationBelonging);\n\t}\n\n\tngAfterViewInit(): void {\n\t\tthis.setResponse(false);\n\t\tthis.cd.detectChanges();\n\t\tthis.autoClose();\n\t}\n\n}\n","import {ApplicationRef, ComponentFactoryResolver, ComponentRef, EmbeddedViewRef, Injectable, Injector, Type} from '@angular/core';\nimport {Observable} from 'rxjs';\nimport {map} from 'rxjs/operators';\nimport {DialogInjector} from '../../../core/dialog-injector';\nimport {GlobalConfigService} from '../../../core/global-config.service';\nimport {ToastNotificationSimpleWrapperComponent} from '../toast-notification-simple-wrapper/toast-notification-simple-wrapper.component';\nimport {ToastNotificationWrapperComponent} from '../toast-notification-wrapper/toast-notification-wrapper.component';\nimport {ToastNotificationClass, ToastNotificationInterface, ToastPositionEnum, ToastUserViewTypeEnum} from './model';\nimport {ToastNotificationConfigService} from './toast-notification-config.service';\n\n@Injectable({\n\tprovidedIn: 'root'\n})\nexport class ToastNotificationService {\n\n\t// toastComponentRefList: ComponentRef<ToastNotificationWrapperComponent>[]    = [];\n\ttoastComponentRefList: ComponentRef<any>[]                                  = [];\n\tbufferToastRawList: ToastNotificationInterface.IToastNotificationRawState[] = [];\n\tbufferCheckingIntervalIsReady: boolean                                      = true;\n\n\tconstructor(private componentFactoryResolver: ComponentFactoryResolver, private injector: Injector, private appRef: ApplicationRef, private toastConfig: ToastNotificationConfigService, private gConfigService: GlobalConfigService) {\n\t}\n\n\topenToast$(_ToastNotificationBelonging: ToastNotificationClass.ToastNotificationBelonging): Observable<ToastNotificationInterface.IPrivateResponseMerged> {\n\t\tlet eventController = _ToastNotificationBelonging.EventsController;\n\t\t// console.log(`%c ${_ToastNotificationBelonging.EntityUniqueID} `, `background: #339933; color: #fff`);\n\n\t\tconst toastRawInstance = this.prepareRawToast(eventController, _ToastNotificationBelonging);\n\t\tthis.listeners(eventController);\n\t\tthis.internalRouting(toastRawInstance);\n\t\treturn eventController.afterClosed$;\n\t}\n\n\tinternalRouting(_ToastRawInstance: ToastNotificationInterface.IToastNotificationRawState): boolean {\n\t\tif (this.isRefListAvailable()) {\n\t\t\tthis.sendToProduction(_ToastRawInstance);\n\t\t\treturn true;\n\t\t} else {\n\t\t\tthis.sendToBuffer(_ToastRawInstance);\n\t\t\treturn false;\n\t\t}\n\t}\n\n\tsendToBuffer(_ToastRawInstance: ToastNotificationInterface.IToastNotificationRawState) {\n\t\tthis.bufferToastRawList.push(_ToastRawInstance);\n\t}\n\n\tsendToProduction(_ToastRawInstance: ToastNotificationInterface.IToastNotificationRawState): void {\n\t\tconst componentRef = this.getComponentRef(_ToastRawInstance);\n\t\tif (componentRef) {\n\t\t\tthis.toastComponentRefList.push(componentRef);\n\t\t\tcomponentRef.instance.toastNotificationBelonging = _ToastRawInstance.ToastBelonging;\n\t\t\tthis.appendToBodyParentComponent(componentRef);\n\n\t\t}\n\t}\n\n\tisRefListAvailable(): boolean {\n\t\treturn this.toastComponentRefList.length < this.toastConfig.productionConfig.GlobalSettings.AllowedNotificationsAtOnce;\n\t}\n\n\tprepareRawToast(_EventsController: ToastNotificationClass.ToastNotificationEventsController, _ToastNotificationBelonging: ToastNotificationClass.ToastNotificationBelonging): ToastNotificationInterface.IToastNotificationRawState {\n\n\t\tconst weakMap = new WeakMap();\n\t\tweakMap.set(ToastNotificationClass.ToastNotificationEventsController, _EventsController);\n\n\t\treturn {\n\t\t\tWeakMap       : weakMap,\n\t\t\tToastBelonging: _ToastNotificationBelonging\n\t\t};\n\t}\n\n\tgetComponentRef(_ToastNotificationRawState: ToastNotificationInterface.IToastNotificationRawState): ComponentRef<any> | null {\n\n\t\tconst dialogIndex = this.findDialogIndex(_ToastNotificationRawState.ToastBelonging.EntityUniqueID);\n\t\tif (dialogIndex === -1) {\n\n\t\t\tlet toastUserViewComponent: Type<any> = ToastNotificationWrapperComponent;\n\t\t\tif (_ToastNotificationRawState.ToastBelonging.ToastCoreConfig.ToastUserViewType === ToastUserViewTypeEnum.SIMPLE) {\n\t\t\t\ttoastUserViewComponent = ToastNotificationSimpleWrapperComponent;\n\t\t\t}\n\t\t\tconst componentFactory = this.componentFactoryResolver.resolveComponentFactory(toastUserViewComponent);\n\t\t\treturn componentFactory.create(new DialogInjector(this.injector, _ToastNotificationRawState.WeakMap));\n\t\t}\n\t\treturn null;\n\t}\n\n\tlisteners(_EventsController: ToastNotificationClass.ToastNotificationEventsController) {\n\n\t\t// Listener for closing dialog\n\t\tconst closeDialogSubscription = _EventsController.afterClosed$.subscribe((response) => {\n\n\t\t\t// this.removeFromBodyParentComponent(modalIndex);\n\t\t\tthis.removeFromBody(response.toastNotificationBelonging.EntityUniqueID);\n\t\t\tcloseDialogSubscription.unsubscribe();\n\t\t});\n\t}\n\n\tappendToBodyParentComponent(_ComponentRef: ComponentRef<any>): void {\n\t\t// attach view to ignite lifecycle hooks\n\t\tthis.appRef.attachView(_ComponentRef.hostView);\n\n\n\t\tconst toastPosition: ToastPositionEnum = _ComponentRef.instance.toastNotificationBelonging.ToastCoreConfig.ToastPosition;\n\t\tconst openInElementID                  = _ComponentRef.instance.toastNotificationBelonging.ToastCoreConfig.OpenInElementID;\n\t\tlet targetNode: HTMLElement;\n\t\tif (!openInElementID) {\n\t\t\tthis.setToastWrapperNode(_ComponentRef.instance.toastNotificationBelonging.ToastCoreConfig.ToastPosition, this.setToastOverlayNode());\n\t\t\ttargetNode = document.getElementById(`toast-wrapper-${toastPosition}`);\n\t\t} else {\n\t\t\ttargetNode = document.getElementById(openInElementID);\n\t\t}\n\n\n\t\tconst domElem = (_ComponentRef.hostView as EmbeddedViewRef<any>).rootNodes[0] as HTMLElement;\n\n\t\tconst toastEntity = document.createElement('div');\n\t\ttoastEntity.setAttribute('id', _ComponentRef.instance.toastNotificationBelonging.EntityUniqueID);\n\t\ttoastEntity.className = 'toast-entity';\n\t\tconst split           = toastPosition.split('-');\n\t\tif (split[1] === 'fullwidth') {\n\t\t\ttoastEntity.style.width = '97vw';\n\t\t} else if (openInElementID) {\n\t\t\ttoastEntity.style.width = '100%';\n\t\t} else {\n\t\t\ttoastEntity.style.width = '300px';\n\t\t}\n\t\ttoastEntity.style.margin = 'auto';\n\t\ttoastEntity.prepend(domElem);\n\t\t// targetNode.prepend(toastEntity);\n\t\tsetTimeout(() => {\n\t\t\ttargetNode.prepend(toastEntity);\n\t\t}, 200);\n\n\t}\n\n\tremoveFromBody(_EntityUniqueID: string): void {\n\n\t\tconst modalIndex = this.findDialogIndex(_EntityUniqueID);\n\t\tif (modalIndex > -1) {\n\n\t\t\tif (this.bufferToastRawList.length) {\n\t\t\t\tthis.sendToProduction(this.bufferToastRawList[0]);\n\t\t\t\tthis.bufferToastRawList.splice(0, 1);\n\n\t\t\t}\n\n\t\t\tthis.toastComponentRefList[modalIndex].instance.closeParent$('close-fast').pipe(map(item => {\n\t\t\t\tconst modalIndex = this.findDialogIndex(_EntityUniqueID);\n\t\t\t\tif (this.toastComponentRefList[modalIndex]) {\n\t\t\t\t\tconst toastEntity = document.getElementById(this.toastComponentRefList[modalIndex].instance.toastNotificationBelonging.EntityUniqueID);\n\t\t\t\t\ttoastEntity.remove();\n\t\t\t\t\t// console.log(`%c ${this.toastComponentRefList[modalIndex].instance.toastNotificationBelonging.EntityUniqueID} `, `background: #cc3333; color: #fff`);\n\t\t\t\t\tthis.appRef.detachView(this.toastComponentRefList[modalIndex].hostView);\n\t\t\t\t\tthis.toastComponentRefList[modalIndex].destroy();\n\t\t\t\t\tthis.toastComponentRefList.splice(modalIndex, 1);\n\t\t\t\t}\n\t\t\t})).subscribe();\n\t\t}\n\t}\n\n\tfindDialogIndex(_DialogUniqueID: string): number {\n\t\treturn this.toastComponentRefList.findIndex((item) => {\n\t\t\treturn _DialogUniqueID === item.instance.toastNotificationBelonging.EntityUniqueID;\n\t\t});\n\t}\n\n\tprivate setToastOverlayNode(): HTMLElement {\n\t\tconst bodyNode = document.body || document.getElementsByTagName('body')[0];\n\t\tif (!bodyNode) {\n\t\t\treturn;\n\t\t}\n\t\t// check the overlay\n\t\tlet toastOverlayNode = document.getElementById('toast-overlay-container') as HTMLStyleElement;\n\n\t\tif (!toastOverlayNode) {\n\t\t\tlet toastOverlayNode = document.createElement('div');\n\t\t\ttoastOverlayNode.setAttribute('id', 'toast-overlay-container');\n\t\t\ttoastOverlayNode.appendChild(document.createTextNode(''));\n\t\t\ttoastOverlayNode.style.position = 'fixed';\n\t\t\ttoastOverlayNode.style.top      = '0';\n\t\t\ttoastOverlayNode.style.left     = '0';\n\t\t\ttoastOverlayNode.style.zIndex   = '999999999';\n\t\t\tbodyNode.appendChild(toastOverlayNode);\n\t\t\treturn toastOverlayNode;\n\t\t}\n\n\t\treturn toastOverlayNode;\n\n\t}\n\n\tprivate setToastWrapperNode(_Position: ToastPositionEnum, _ToastOverlayNode: HTMLElement) {\n\n\t\tlet toastWrapperNode = document.getElementById(`toast-wrapper-${_Position}`) as HTMLStyleElement;\n\t\tif (!toastWrapperNode) {\n\t\t\tconst toastWrapper = document.createElement('div');\n\t\t\ttoastWrapper.setAttribute('id', 'toast-wrapper-' + _Position);\n\t\t\ttoastWrapper.appendChild(document.createTextNode(''));\n\t\t\t_ToastOverlayNode.prepend(toastWrapper);\n\n\t\t\tconst split = _Position.split('-');\n\n\t\t\tif (split[1] === 'right' || split[1] === 'left') {\n\t\t\t\tthis.gConfigService.getSheet('ngx-awesome-popup-styles').addRule(`#toast-wrapper-${_Position}`, `${split[0]}: 20px; ${split[1]}: 20px; position: fixed; z-index: 999999;`);\n\t\t\t}\n\t\t\tif (split[1] === 'center') {\n\t\t\t\tthis.gConfigService.getSheet('ngx-awesome-popup-styles').addRule(`#toast-wrapper-${_Position}`, `${split[0]}: 20px; width: 100%; position: fixed; z-index: 999999; pointer-events: none;`);\n\t\t\t}\n\t\t\tif (split[1] === 'fullwidth') {\n\t\t\t\tthis.gConfigService.getSheet('ngx-awesome-popup-styles').addRule(`#toast-wrapper-${_Position}`, `${split[0]}: 10px; width: 100%; position: fixed; z-index: 999999; pointer-events: none;`);\n\t\t\t}\n\n\t\t}\n\n\n\t}\n}\n","import {Observable, Subject} from 'rxjs';\nimport {map} from 'rxjs/operators';\nimport {DialogLayoutDisplay, VerticalPosition} from '../../../core/enums';\nimport {GlobalClass, GlobalInterface} from '../../../core/global';\nimport {ServiceLocator} from '../../../locator.service';\nimport {ToastNotificationConfigService} from './toast-notification-config.service';\nimport {ToastNotificationService} from './toast-notification.service';\n\n\nexport namespace ToastNotificationInterface {\n\n\texport interface IToastNotificationUserConfig {\n\t\tButtons?: GlobalInterface.IButton[];\n\t\tToastCoreConfig?: ToastNotificationInterface.IToastCoreConfig;\n\t\tDispatch?: GlobalInterface.IDispatch;\n\t\tGlobalSettings?: ToastNotificationInterface.IGlobalToastSettings;\n\t}\n\n\texport interface IGlobalToastSettings {\n\t\t/** Number of popups allowed on screen, recommend 3-5 */\n\t\tAllowedNotificationsAtOnce: number;\n\t}\n\n\texport interface IToastCoreConfig {\n\t\tToastPosition?: ToastPositionEnum;\n\t\tProgressBar?: ToastProgressBarEnum;\n\t\tToastUserViewType?: ToastUserViewTypeEnum;\n\t\tOpenInElementID?: string;\n\t\tButtonPosition?: VerticalPosition;\n\t\tTextPosition?: VerticalPosition;\n\t\tLayoutType?: DialogLayoutDisplay;\n\t\tDispatch?: GlobalInterface.IDispatch;\n\t\t/** Default confirm button Label */\n\t\tConfirmLabel?: string;\n\t\t/** Default decline button Label */\n\t\tDeclineLabel?: string;\n\t\t/** Expressed in milliseconds */\n\t\tAutoCloseDelay?: number;\n\t\tDisableIcon?: boolean;\n\t\tAllowHTMLMessage?: boolean;\n\t}\n\n\texport interface IToastNotificationBelonging {\n\t\tButtons: GlobalInterface.IButton[];\n\t\tToastCoreConfig: ToastNotificationInterface.IToastCoreConfig;\n\t\tEntityUniqueID: string;\n\t\tEventsController: ToastNotificationClass.ToastNotificationEventsController;\n\t}\n\n\texport interface IToastNotificationResponse {\n\t\tsetSuccess(_IsSuccess: boolean): void;\n\n\t\tsetClickedButtonID(_ClickedButtonID): void;\n\n\t}\n\n\texport interface IToastNotificationPublicResponse {\n\t\tSuccess: boolean;\n\t\tClickedButtonID: string\n\t}\n\n\texport interface IPrivateResponseMerged extends IToastNotificationResponse, GlobalInterface.IPrivateResponse {\n\n\t\ttoastNotificationBelonging: ToastNotificationInterface.IToastNotificationBelonging;\n\t}\n\n\texport interface IToastNotificationRawState {\n\t\tWeakMap: WeakMap<any, ToastNotificationClass.ToastNotificationEventsController>;\n\t\tToastBelonging: ToastNotificationClass.ToastNotificationBelonging;\n\t}\n\n}\n\nexport namespace ToastNotificationClass {\n\n\t// region *** Public ***\n\texport class ToastNotificationInitializer {\n\n\t\tprivate toastNotificationCarrier: ToastNotificationClass.ToastNotificationCarrier = new ToastNotificationClass.ToastNotificationCarrier();\n\n\t\tconstructor() {\n\t\t}\n\n\t\topenToastNotification$(): Observable<ToastNotificationInterface.IToastNotificationPublicResponse> {\n\t\t\treturn this.toastNotificationCarrier.openToastNotification$().pipe(map(resp => {\n\t\t\t\tconst basicToastNotificationResponse = new ToastNotificationResponse();\n\t\t\t\tconst dataControl                    = new GlobalClass.DataControl();\n\t\t\t\tdataControl.copyValuesFrom(resp, basicToastNotificationResponse);\n\t\t\t\treturn basicToastNotificationResponse;\n\t\t\t}));\n\t\t}\n\n\t\tsetButtons(_Buttons: GlobalInterface.IButton[]): void {\n\t\t\tthis.toastNotificationCarrier.setButtons(_Buttons);\n\t\t}\n\n\t\tsetConfig(_ToastNotificationConfig: ToastNotificationInterface.IToastCoreConfig) {\n\t\t\tthis.toastNotificationCarrier.setConfig(_ToastNotificationConfig);\n\t\t}\n\n\t\tsetDispatch(_Title: string, _Message: string = null): void {\n\t\t\tthis.toastNotificationCarrier.setTitle(_Title);\n\t\t\tthis.toastNotificationCarrier.setMessage(_Message);\n\t\t}\n\n\t\tsetTitle(_Title: string): void {\n\t\t\tthis.toastNotificationCarrier.setTitle(_Title);\n\t\t}\n\n\t\tsetMessage(_Message: string): void {\n\t\t\tthis.toastNotificationCarrier.setMessage(_Message);\n\t\t}\n\n\t\tsetButtonLabels(_Confirm: string, _Decline?: string): void {\n\t\t\tthis.toastNotificationCarrier.setButtonLabels(_Confirm, _Decline);\n\t\t}\n\n\t}\n\n\texport class ToastNotificationResponse extends GlobalClass.DataControl implements ToastNotificationInterface.IToastNotificationResponse, ToastNotificationInterface.IToastNotificationPublicResponse {\n\t\t// private Response: DialogPrepareResponse            = new DialogPrepareResponse();\n\n\t\tSuccess: boolean        = null;\n\t\tClickedButtonID: string = null;\n\n\t\tconstructor() {\n\t\t\tsuper();\n\t\t}\n\n\t\tsetSuccess(_IsSuccess: boolean): void {\n\t\t\tthis.Success = _IsSuccess;\n\t\t}\n\n\t\tsetClickedButtonID(_ClickedButtonID): void {\n\t\t\tthis.ClickedButtonID = _ClickedButtonID;\n\t\t}\n\n\n\t}\n\n\texport class ToastNotificationEventsController {\n\n\t\tdefaultResponse: ToastNotificationInterface.IPrivateResponseMerged;\n\n\t\tprivate readonly _afterClosed: Subject<ToastNotificationInterface.IPrivateResponseMerged> = new Subject<ToastNotificationInterface.IPrivateResponseMerged>();\n\t\tafterClosed$: Observable<ToastNotificationInterface.IPrivateResponseMerged>               = this._afterClosed.asObservable();\n\t\tprivate readonly _onButtonClick: Subject<GlobalInterface.IButton>                         = new Subject<GlobalInterface.IButton>();\n\t\tonButtonClick$: Observable<GlobalInterface.IButton>                                       = this._onButtonClick.asObservable();\n\t\tprivate readonly _buttonList: Subject<GlobalInterface.IButton[]>                          = new Subject<GlobalInterface.IButton[]>();\n\t\tbuttonList$: Observable<GlobalInterface.IButton[]>                                        = this._buttonList.asObservable();\n\n\t\tconstructor(private EntityUniqueID: string) {\n\t\t}\n\n\n\t\tclose(_Response?: ToastNotificationInterface.IPrivateResponseMerged): void {\n\t\t\tconst response = _Response ? _Response : this.defaultResponse;\n\t\t\tthis._afterClosed.next(response);\n\t\t}\n\n\t\tonButtonClick(_Button: GlobalInterface.IButton): void {\n\t\t\tthis.defaultResponse.setClickedButtonID(_Button.ID);\n\t\t\tthis._onButtonClick.next(_Button);\n\t\t}\n\n\t\tsetButtonList(_ButtonList: GlobalInterface.IButton[]): void {\n\t\t\tthis._buttonList.next(_ButtonList);\n\t\t}\n\n\t\tsetDefaultResponse(_Response: ToastNotificationInterface.IPrivateResponseMerged): void {\n\t\t\tthis.defaultResponse = _Response;\n\t\t}\n\t}\n\n\t// endregion\n\n\texport class ToastNotificationDefaultResponse extends ToastNotificationResponse implements ToastNotificationInterface.IPrivateResponseMerged {\n\t\ttoastNotificationBelonging: ToastNotificationBelonging = null;\n\n\t\tconstructor() {\n\t\t\tsuper();\n\t\t}\n\n\t\tsetBelonging(_ToastNotificationBelonging): void {\n\t\t\tthis.toastNotificationBelonging = _ToastNotificationBelonging;\n\t\t}\n\n\t}\n\n\texport class ToastNotificationCarrier {\n\n\t\ttoastNotificationBelonging: ToastNotificationClass.ToastNotificationBelonging = new ToastNotificationClass.ToastNotificationBelonging();\n\n\t\tconstructor() {\n\t\t}\n\n\t\tsetButtons(_Buttons: GlobalInterface.IButton[]) {\n\t\t\tif (_Buttons.length) {\n\t\t\t\tthis.toastNotificationBelonging.Buttons = _Buttons;\n\t\t\t}\n\t\t}\n\n\t\tsetTitle(_Title: string): void {\n\t\t\tthis.toastNotificationBelonging.Dispatch.Title = _Title;\n\t\t}\n\n\t\tsetMessage(_Message: string): void {\n\t\t\tthis.toastNotificationBelonging.Dispatch.Message = _Message;\n\t\t}\n\n\t\tsetButtonLabels(_Confirm: string, _Decline: string): void {\n\t\t\tthis.toastNotificationBelonging.ToastCoreConfig.ConfirmLabel = _Confirm;\n\t\t\tthis.toastNotificationBelonging.ToastCoreConfig.DeclineLabel = _Decline;\n\n\t\t}\n\n\t\tsetConfig(_ToastNotificationBelonging: ToastNotificationInterface.IToastCoreConfig) {\n\t\t\t// region *** local UserConfig (defined on place where dialog is called) ***\n\t\t\tconst dataControl = new GlobalClass.DataControl();\n\t\t\tdataControl.copyValuesFrom(_ToastNotificationBelonging, this.toastNotificationBelonging.ToastCoreConfig);\n\t\t\t// endregion\n\t\t}\n\n\t\topenToastNotification$(): Observable<ToastNotificationInterface.IPrivateResponseMerged> {\n\t\t\tif (!this.toastNotificationBelonging.Dispatch.Title\n\t\t\t\t&& !this.toastNotificationBelonging.Dispatch.Message) {\n\t\t\t\tthrow Error('Toast notification can not be without both message and title.');\n\t\t\t}\n\t\t\tconst service: ToastNotificationService = ServiceLocator.injector.get(ToastNotificationService);\n\t\t\treturn service.openToast$(this.toastNotificationBelonging);\n\n\t\t}\n\n\t}\n\n\texport class GlobalToastSettings implements ToastNotificationInterface.IGlobalToastSettings {\n\t\tAllowedNotificationsAtOnce: number = null;\n\t}\n\n\texport class ResetToastGlobalSettings {\n\t\tconstructor(globalToastConfig?: ToastNotificationInterface.IGlobalToastSettings) {\n\n\t\t\tconst globalToastConfigService: ToastNotificationConfigService = ServiceLocator.injector.get(ToastNotificationConfigService);\n\t\t\tif (globalToastConfigService) {\n\t\t\t\tglobalToastConfigService.setResetGlobalToastConfig(globalToastConfig);\n\t\t\t} else {\n\t\t\t\tglobalToastConfigService.setResetGlobalToastConfig();\n\t\t\t}\n\t\t}\n\t}\n\n\n\texport class Settings {\n\t\tButtons: GlobalInterface.IButton[]                           = [];\n\t\tToastCoreConfig: ToastNotificationInterface.IToastCoreConfig = new ToastCoreConfig();\n\t\tDispatch: GlobalInterface.IDispatch                          = new GlobalClass.Dispatch();\n\t\tGlobalSettings: GlobalToastSettings                          = new GlobalToastSettings();\n\n\t}\n\n\texport class ToastCoreConfig implements ToastNotificationInterface.IToastCoreConfig {\n\t\tToastPosition: ToastPositionEnum         = null;\n\t\tProgressBar: ToastProgressBarEnum        = null;\n\t\tToastUserViewType: ToastUserViewTypeEnum = null;\n\t\tOpenInElementID: string                  = null;\n\t\tButtonPosition: VerticalPosition         = null;\n\t\tTextPosition: VerticalPosition           = null;\n\t\tLayoutType: DialogLayoutDisplay          = null;\n\t\tDispatch: GlobalInterface.IDispatch      = null;\n\t\tConfirmLabel: string                     = null;\n\t\tDeclineLabel: string                     = null;\n\t\tAutoCloseDelay: number                   = null;\n\t\tDisableIcon: boolean                     = null;\n\t\tAllowHTMLMessage: boolean                = null;\n\n\t}\n\n\texport class ToastNotificationBelonging extends ToastNotificationClass.Settings implements ToastNotificationInterface.IToastNotificationBelonging {\n\n\t\tEntityUniqueID: string = 'T' + Math.random().toString(36).substr(2, 9);\n\t\tEventsController: ToastNotificationEventsController;\n\n\t\tconstructor() {\n\t\t\tsuper();\n\t\t\tthis.EventsController                                               = new ToastNotificationEventsController(this.EntityUniqueID);\n\t\t\tconst toastNotificationConfigurator: ToastNotificationConfigService = ServiceLocator.injector.get(ToastNotificationConfigService);\n\t\t\tconst baseSettings                                                  = new ToastNotificationClass.Settings();\n\t\t\tconst dataControl                                                   = new GlobalClass.DataControl();\n\t\t\tdataControl.copyValuesFrom(toastNotificationConfigurator.productionConfig.ToastCoreConfig, baseSettings.ToastCoreConfig);\n\t\t\tthis.ToastCoreConfig = baseSettings.ToastCoreConfig;\n\t\t\tthis.Buttons         = toastNotificationConfigurator.productionConfig.Buttons.slice();\n\t\t}\n\n\t}\n\n}\n\nexport enum ToastProgressBarEnum {\n\n\tNONE     = 0,\n\tINCREASE = 1,\n\tDECREASE = 2,\n}\n\nexport enum ToastPositionEnum {\n\tTOP_LEFT          = 'top-left',\n\tTOP_CENTER        = 'top-center',\n\tTOP_RIGHT         = 'top-right',\n\tTOP_FULL_WIDTH    = 'top-fullwidth',\n\tBOTTOM_LEFT       = 'bottom-left',\n\tBOTTOM_CENTER     = 'bottom-center',\n\tBOTTOM_RIGHT      = 'bottom-right',\n\tBOTTOM_FULL_WIDTH = 'bottom-fullwidth',\n}\n\nexport enum ToastUserViewTypeEnum {\n\tSIMPLE   = 'simple',\n\tSTANDARD = 'standard',\n}\n","import {Component} from '@angular/core';\n\n@Component({\n\tselector   : 'ed-default-loader',\n\ttemplateUrl: './default-loader.component.html',\n\tstyleUrls  : ['./default-loader.component.scss']\n})\nexport class DefaultLoaderComponent {\n\n}\n","import {Inject, Injectable} from '@angular/core';\nimport {DialogLayoutDisplay} from '../../../core/enums';\nimport {GlobalClass} from '../../../core/global';\nimport {DefaultLoaderComponent} from '../../../default-loader/default-loader.component';\nimport {DialogClass, DialogInterface} from './model';\n\n@Injectable({\n\tprovidedIn: 'root'\n})\nexport class DialogConfigService {\n\n\tauthorConfig: DialogInterface.IDialogUserConfig     = new DialogClass.DialogSettings();\n\tproductionConfig: DialogInterface.IDialogUserConfig = new DialogClass.DialogSettings();\n\n\tconstructor(@Inject('dialogConfig') private userConfig: DialogInterface.IDialogUserConfig = {}) {\n\n\t\t// region *** dialog userConfig (user input app-module) ***\n\t\tconst userConfigBase = new DialogClass.DialogSettings();\n\t\tconst dataControl    = new GlobalClass.DataControl();\n\t\tdataControl.copyValuesFrom(userConfig.DialogCoreConfig, userConfigBase.DialogCoreConfig); // this will make sure that object has right properties\n\t\tuserConfig.DialogCoreConfig = userConfigBase.DialogCoreConfig;\n\n\t\tif (userConfig.DialogCoreConfig.LoaderComponent !== null) {\n\t\t\tuserConfig.DialogCoreConfig.DisplayLoader = userConfig.DialogCoreConfig.DisplayLoader === null;\n\t\t}\n\t\t// endregion\n\n\t\t// region *** author default config values (if there is no user input) ***\n\t\tthis.authorConfig.DialogCoreConfig.Width           = 'auto';\n\t\tthis.authorConfig.DialogCoreConfig.Height          = 'auto';\n\t\tthis.authorConfig.DialogCoreConfig.ButtonPosition  = 'right';\n\t\tthis.authorConfig.DialogCoreConfig.DisplayLoader   = false;\n\t\tthis.authorConfig.DialogCoreConfig.LayoutType      = DialogLayoutDisplay.NONE;\n\t\tthis.authorConfig.DialogCoreConfig.LoaderComponent = DefaultLoaderComponent;\n\t\t// endregion\n\n\t\tdataControl.copyValuesFrom(this.authorConfig.DialogCoreConfig, this.productionConfig.DialogCoreConfig);\n\t\tdataControl.copyValuesFrom(userConfig.DialogCoreConfig, this.productionConfig.DialogCoreConfig);\n\n\t\t// Buttons\n\t\t/*if(userConfig.Buttons){\n\t\t\tthis.config.Buttons.push(\n\t\t\t\tnew ButtonMaker('Ok', 'ok', ButtonLayoutDisplay.PRIMARY)\n\t\t\t\t,new ButtonMaker('Cancel', 'cancel', ButtonLayoutDisplay.SECONDARY)\n\t\t\t);\n\t\t}*/\n\n\t}\n}\n","import {Directive, ViewContainerRef} from '@angular/core';\n\n\n@Directive({\n\tselector: '[appInsertionLoader]'\n})\nexport class InsertionLoaderDirective {\n\n\tconstructor(\n\t\tpublic viewContainerRef: ViewContainerRef) {\n\t}\n\n}\n","import {Directive, ViewContainerRef} from '@angular/core';\n\n\n@Directive({\n\tselector: '[appInsertion]'\n})\nexport class InsertionDirective {\n\n\tconstructor(\n\t\tpublic viewContainerRef: ViewContainerRef) {\n\t}\n\n}\n","import {AfterViewInit, ChangeDetectorRef, Component, ComponentFactoryResolver, ComponentRef, OnDestroy, Type, ViewChild} from '@angular/core';\nimport {Observable, Observer} from 'rxjs';\nimport {delay} from 'rxjs/operators';\nimport {fadeInOut} from '../../../core/animations';\nimport {InsertionLoaderDirective} from '../../../core/insertion-loader.directive';\nimport {InsertionDirective} from '../../../core/insertion.directive';\nimport {DialogClass} from '../core/model';\n\n\n@Component({\n\tselector   : 'dialog-popup-wrapper',\n\ttemplateUrl: './dialog-wrapper.component.html',\n\tstyleUrls  : ['./dialog-wrapper.component.scss'],\n\tanimations : [fadeInOut(0, 1)]\n\n})\nexport class DialogWrapperComponent implements AfterViewInit, OnDestroy {\n\tfadeInOutAnimation: string = 'open';\n\tshowLoader: boolean        = true;\n\n\tchildComponentRef: ComponentRef<any>;\n\tchildComponentType: Type<any>;\n\tloaderComponentRef: ComponentRef<any>;\n\n\t@ViewChild(InsertionDirective, {static: true}) insertionPoint: InsertionDirective;\n\t@ViewChild(InsertionLoaderDirective, {static: true}) loaderInsertionPoint: InsertionLoaderDirective;\n\n\tconstructor(\n\t\tpublic dialogBelonging: DialogClass.DialogBelonging,\n\t\tprivate componentFactoryResolver: ComponentFactoryResolver,\n\t\tprivate cd: ChangeDetectorRef\n\t) {\n\t}\n\n\tngAfterViewInit(): void {\n\t\tthis.loadChildComponent(this.childComponentType);\n\t\tthis.loadLoaderComponent(this.dialogBelonging.DialogCoreConfig.LoaderComponent);\n\t\tthis.setDefaultResponse();\n\t\tthis.cd.detectChanges();\n\t}\n\n\tsetDefaultResponse(): void {\n\t\tconst dialogResponse = new DialogClass.DialogDefaultResponse();\n\t\tdialogResponse.setBelonging(this.dialogBelonging);\n\t\tthis.dialogBelonging.EventsController.setDefaultResponse(dialogResponse);\n\t}\n\n\tngOnDestroy(): void {\n\t\tif (this.childComponentRef) {\n\t\t\tthis.childComponentRef.destroy();\n\t\t}\n\t\tif (this.loaderComponentRef) {\n\t\t\tthis.loaderComponentRef.destroy();\n\t\t}\n\t}\n\n\tloadChildComponent(_ComponentType: Type<any>): void {\n\n\t\tconst componentFactory = this.componentFactoryResolver.resolveComponentFactory(_ComponentType);\n\n\t\tconst viewContainerRef = this.insertionPoint.viewContainerRef;\n\t\tviewContainerRef.clear();\n\n\t\tthis.childComponentRef = viewContainerRef.createComponent(componentFactory);\n\n\t\tthis.childComponentRef.instance.dialogBelonging = this.dialogBelonging;\n\t}\n\n\tloadLoaderComponent(_LoaderRef: Type<any>): void {\n\t\tconst componentFactory = this.componentFactoryResolver.resolveComponentFactory(_LoaderRef);\n\t\tconst viewContainerRef = this.loaderInsertionPoint.viewContainerRef;\n\t\tviewContainerRef.clear();\n\n\t\tthis.loaderComponentRef = viewContainerRef.createComponent(componentFactory);\n\t}\n\n\tclose() {\n\n\t\tthis.dialogBelonging.EventsController.close();\n\t}\n\n\tcloseParent$(_ClosingAnimation: string): Observable<any> {\n\t\tthis.fadeInOutAnimation = _ClosingAnimation;\n\t\tconst timer             = _ClosingAnimation === 'close-slow' ? 1400 : 150;\n\n\t\treturn new Observable((observer: Observer<any>) => {\n\t\t\tobserver.next('');\n\t\t\tobserver.complete();\n\t\t}).pipe(delay(timer));\n\t}\n\n\tonOverlayClicked(evt: MouseEvent): void {\n\t\t// console.log('onOverlayClicked');\n\t}\n\n\tonCustomButton(_Button: any): void {\n\t\tthis.dialogBelonging.EventsController.onButtonClick(_Button);\n\t}\n\n\tcloseLoader(): void {\n\t\tthis.showLoader = false;\n\t}\n\n}\n","import {ApplicationRef, ComponentFactoryResolver, ComponentRef, EmbeddedViewRef, Injectable, Injector, Type} from '@angular/core';\nimport {map} from 'rxjs/operators';\nimport {DialogInjector} from '../../../core/dialog-injector';\nimport {DialogWrapperComponent} from '../dialog-wrapper/dialog-wrapper.component';\nimport {DialogClass, DialogInterface} from './model';\n\n@Injectable({\n\tprovidedIn: 'root'\n})\nexport class DialogService {\n\n\tdialogParentComponentRefList: ComponentRef<any>[] = [];\n\n\tconstructor(private componentFactoryResolver: ComponentFactoryResolver, private injector: Injector, private appRef: ApplicationRef) {\n\t}\n\n\topen(_ComponentType: Type<any>, _DialogBelonging: DialogClass.DialogBelonging): DialogInterface.IDialogEventsController {\n\t\tconst dialogController = _DialogBelonging.EventsController;\n\t\tconst componentRef     = this.getComponentRef(dialogController, _DialogBelonging);\n\n\t\tthis.dialogParentComponentRefList.push(componentRef);\n\t\tcomponentRef.instance.dialogBelonging    = _DialogBelonging;\n\t\tcomponentRef.instance.childComponentType = _ComponentType;\n\n\t\tthis.appendToBodyParentComponent(componentRef);\n\n\t\tthis.listeners(dialogController);\n\n\t\treturn dialogController;\n\n\t}\n\n\tgetComponentRef(_EventsController: DialogInterface.IDialogEventsController, _DialogBelonging: DialogClass.DialogBelonging): ComponentRef<any> | null {\n\t\tlet componentFactory;\n\n\t\tconst dialogIndex = this.findDialogIndex(_DialogBelonging.EntityUniqueID);\n\t\tif (dialogIndex === -1) {\n\n\t\t\tconst weakMap = new WeakMap();\n\t\t\tweakMap.set(DialogClass.DialogEventsController, _EventsController);\n\n\t\t\tcomponentFactory = this.componentFactoryResolver.resolveComponentFactory(DialogWrapperComponent);\n\t\t\treturn componentFactory.create(new DialogInjector(this.injector, weakMap));\n\n\t\t}\n\n\t\treturn null;\n\t}\n\n\tlisteners(_EventsController: DialogInterface.IDialogEventsController) {\n\n\t\t// Listener for closing dialog\n\t\tconst closeDialogSubscription = _EventsController.afterClosed$.subscribe((response) => {\n\t\t\tconst modalIndex = this.findDialogIndex(response.DialogBelonging.EntityUniqueID);\n\t\t\tthis.removeFromBodyDialogWrapperComponent(modalIndex);\n\t\t\tcloseDialogSubscription.unsubscribe();\n\t\t});\n\n\t\t// Listener for turning off loader\n\t\tconst closeLoaderSubscription = _EventsController.afterLoader$.subscribe((_DialogUniqueID: string) => {\n\t\t\tif (_DialogUniqueID) {\n\t\t\t\tconst modalIndex = this.findDialogIndex(_DialogUniqueID);\n\t\t\t\tif (modalIndex !== -1) {\n\t\t\t\t\tthis.dialogParentComponentRefList[modalIndex].instance.closeLoader();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tcloseLoaderSubscription.unsubscribe();\n\t\t});\n\n\t}\n\n\tchildComponentResolver() {\n\n\t}\n\n\tappendToBodyParentComponent(_ComponentRef: ComponentRef<any>): void {\n\n\t\t// attach view to ignite lifecycle hooks\n\t\tthis.appRef.attachView(_ComponentRef.hostView);\n\n\t\t// DOM\n\t\tconst domElem = (_ComponentRef.hostView as EmbeddedViewRef<any>).rootNodes[0] as HTMLElement;\n\t\tdocument.body.appendChild(domElem);\n\n\t}\n\n\tcloseDialogWrapperComponent(_DialogUniqueID: string) {\n\t\tconst modalIndex = this.findDialogIndex(_DialogUniqueID);\n\t\tthis.removeFromBodyDialogWrapperComponent(modalIndex);\n\t}\n\n\tremoveFromBodyDialogWrapperComponent(_DialogIndex: number): void {\n\t\tif (_DialogIndex > -1) {\n\t\t\tthis.dialogParentComponentRefList[_DialogIndex].instance.closeParent$('close-fast').pipe(map(item => {\n\t\t\t\tthis.appRef.detachView(this.dialogParentComponentRefList[_DialogIndex].hostView);\n\t\t\t\tthis.dialogParentComponentRefList[_DialogIndex].destroy();\n\t\t\t\tthis.dialogParentComponentRefList.splice(_DialogIndex, 1);\n\t\t\t})).subscribe();\n\t\t}\n\t}\n\n\tfindDialogIndex(_DialogUniqueID: string): number {\n\t\treturn this.dialogParentComponentRefList.findIndex((item) => {\n\t\t\treturn _DialogUniqueID === item.instance.dialogBelonging.EntityUniqueID;\n\t\t});\n\t}\n}\n","import {Type} from '@angular/core';\nimport {Observable, Subject} from 'rxjs';\nimport {map} from 'rxjs/operators';\nimport {DialogLayoutDisplay, VerticalPosition} from '../../../core/enums';\nimport {GlobalClass, GlobalInterface} from '../../../core/global';\nimport {ServiceLocator} from '../../../locator.service';\nimport {DialogConfigService} from './dialog-config.service';\nimport {DialogService} from './dialog.service';\n\nexport namespace DialogInterface {\n\n\t/**\n\t * Check interface of properties.\n\t */\n\texport interface IDialogUserConfig {\n\t\tButtons?: GlobalInterface.IButton[];\n\t\tDialogCoreConfig?: DialogInterface.IDialogCoreConfig;\n\t}\n\n\t/**\n\t * Optional user configuration.\n\t *\n\t * Example:\n\t * ```typescript\n\t * // Dialog core config object example.\n\t * const dialogCoreConfig = {\n\t *     DialogCoreConfig: {\n\t *        Width         : '500px',\n\t *        Height        : '500px',\n\t *        ButtonPosition: 'right',\n\t *        LayoutType: DialogLayoutDisplay.INFO,\n\t *        LoaderComponent: // Any Angular component class name can be included as a loader.\n\t *        DisplayLoader: false // This will override LoaderComponent.\n\t *     }\n\t *  }\n\t * ```\n\t */\n\texport interface IDialogCoreConfig {\n\t\t/** Fixed popup width */\n\t\tWidth?: string;\n\t\t/** Fixed popup height */\n\t\tHeight?: string;\n\t\tButtonPosition?: VerticalPosition;\n\t\tLayoutType?: DialogLayoutDisplay;\n\t\tDisplayLoader?: boolean;\n\t\tLoaderComponent?: Type<any>;\n\t}\n\n\texport interface IDialogBelonging {\n\t\tButtons: GlobalInterface.IButton[];\n\t\tDialogCoreConfig: DialogInterface.IDialogCoreConfig;\n\t\tEntityUniqueID: string;\n\t\tCustomData: any;\n\t\tEventsController: DialogInterface.IDialogEventsController;\n\t}\n\n\texport interface IDialogEventsController {\n\t\t/** @internal */\n\t\tdefaultResponse: DialogInterface.IPrivateResponseMerged;\n\t\t/** @internal */\n\t\tafterClosed$: Observable<DialogInterface.IPrivateResponseMerged>;\n\t\t/** @internal */\n\t\tafterLoader$: Observable<string>;\n\t\t/** @internal */\n\t\tonButtonClick$: Observable<GlobalInterface.IButton>;\n\t\t/** @internal */\n\t\tbuttonList$: Observable<GlobalInterface.IButton[]>;\n\n\t\tclose(_Payload?: any): void;\n\n\t\tonButtonClick(_Button: GlobalInterface.IButton): void;\n\n\t\tsetButtonList(_ButtonList: GlobalInterface.IButton[]): void;\n\n\t\tcloseLoader(): void;\n\n\t\tsetDefaultResponse(_Response: DialogInterface.IPrivateResponseMerged): void;\n\n\t\tsetDefaultResponse(_Response: DialogInterface.IPrivateResponseMerged): void;\n\t}\n\n\texport interface IDialogResponse {\n\n\t\tsetPayload(_Payload: any): void;\n\n\t\tsetClickedButtonID(_ClickedButtonID): void;\n\n\t}\n\n\texport interface IDialogPublicResponse<ResponsePayload> {\n\t\t/** Generic property type, accept expected payload from dynamic child component. */\n\t\tPayload: ResponsePayload;\n\t\tSuccess: boolean;\n\t\tClickedButtonID: string\n\t}\n\n\texport interface IPrivateResponseMerged extends IDialogResponse, GlobalInterface.IPrivateResponse {\n\n\t\tDialogBelonging: DialogInterface.IDialogBelonging;\n\t}\n\n\n}\n\nexport namespace DialogClass {\n\n\t// region *** Public ***\n\n\texport class DialogInitializer {\n\n\t\tprivate dialogCarrier: DialogCarrier = new DialogClass.DialogCarrier();\n\n\t\tconstructor(private component: Type<any>) {\n\t\t\tthis.dialogCarrier.setComponent(this.component);\n\t\t}\n\n\t\t/** Generic method accept expected payload from dynamic child component.*/\n\t\topenDialog$<ResponsePayload = any>(): Observable<DialogInterface.IDialogPublicResponse<ResponsePayload>> {\n\t\t\treturn this.dialogCarrier.openDialog$().pipe(map(resp => {\n\t\t\t\tconst basicDialogResponse = new DialogResponse();\n\t\t\t\tconst dataControl         = new GlobalClass.DataControl();\n\t\t\t\tdataControl.copyValuesFrom(resp, basicDialogResponse);\n\t\t\t\treturn basicDialogResponse;\n\t\t\t}));\n\t\t}\n\n\t\t/** It accepts list of custom buttons */\n\t\tsetButtons(_Buttons: GlobalInterface.IButton[]): void {\n\t\t\tthis.dialogCarrier.setButtons(_Buttons);\n\t\t}\n\n\t\tsetCustomData(_CustomData: any) {\n\t\t\tthis.dialogCarrier.setCustomData(_CustomData);\n\t\t}\n\n\t\tsetConfig(_DialogConfig: DialogInterface.IDialogCoreConfig) {\n\t\t\tthis.dialogCarrier.setConfig(_DialogConfig);\n\t\t}\n\n\t}\n\n\texport class DialogResponse extends GlobalClass.DataControl implements DialogInterface.IDialogResponse, DialogInterface.IDialogPublicResponse<any> {\n\t\t// private Response: DialogPrepareResponse            = new DialogPrepareResponse();\n\n\t\tPayload: any            = null;\n\t\tSuccess: boolean        = null;\n\t\tClickedButtonID: string = null;\n\n\t\tconstructor() {\n\t\t\tsuper();\n\t\t}\n\n\t\t/**\n\t\t * @ignore\n\t\t */\n\t\tsetPayload(_Payload: any): void {\n\t\t\tthis.Payload = _Payload;\n\t\t}\n\n\t\t/**\n\t\t * @ignore\n\t\t */\n\t\tsetClickedButtonID(_ClickedButtonID): void {\n\t\t\tthis.ClickedButtonID = _ClickedButtonID;\n\t\t}\n\n\t}\n\n\texport class DialogEventsController implements DialogInterface.IDialogEventsController {\n\n\t\tdefaultResponse: DialogInterface.IPrivateResponseMerged;\n\n\t\tprivate readonly _afterClosed: Subject<DialogInterface.IPrivateResponseMerged> = new Subject<DialogInterface.IPrivateResponseMerged>();\n\t\tafterClosed$: Observable<DialogInterface.IPrivateResponseMerged>               = this._afterClosed.asObservable();\n\n\t\tprivate readonly _afterLoader: any                                = new Subject<string>();\n\t\tafterLoader$: Observable<string>                                  = this._afterLoader.asObservable();\n\t\tprivate readonly _onButtonClick: Subject<GlobalInterface.IButton> = new Subject<GlobalInterface.IButton>();\n\t\tonButtonClick$: Observable<GlobalInterface.IButton>               = this._onButtonClick.asObservable();\n\t\tprivate readonly _buttonList: Subject<GlobalInterface.IButton[]>  = new Subject<GlobalInterface.IButton[]>();\n\t\tbuttonList$: Observable<GlobalInterface.IButton[]>                = this._buttonList.asObservable();\n\n\t\tconstructor(private EntityUniqueID: string) {\n\t\t}\n\n\t\tclose(_Payload: any = null): void {\n\t\t\tthis.defaultResponse.setPayload(_Payload);\n\t\t\tthis._afterClosed.next(this.defaultResponse);\n\t\t}\n\n\t\tonButtonClick(_Button: GlobalInterface.IButton): void {\n\t\t\tthis.defaultResponse.setClickedButtonID(_Button.ID);\n\t\t\tthis._onButtonClick.next(_Button);\n\t\t}\n\n\t\tsetButtonList(_ButtonList: GlobalInterface.IButton[]): void {\n\t\t\tthis._buttonList.next(_ButtonList);\n\t\t}\n\n\t\tcloseLoader(): void {\n\t\t\tsetTimeout(() => {\n\t\t\t\tthis._afterLoader.next(this.EntityUniqueID);\n\t\t\t}, 0);\n\n\t\t}\n\n\t\tsetDefaultResponse(_Response: DialogInterface.IPrivateResponseMerged): void {\n\t\t\tthis.defaultResponse = _Response;\n\t\t}\n\t}\n\n\t// endregion\n\n\texport class DialogDefaultResponse extends DialogResponse implements DialogInterface.IPrivateResponseMerged {\n\t\tDialogBelonging: DialogInterface.IDialogBelonging = null;\n\n\t\tconstructor() {\n\t\t\tsuper();\n\t\t}\n\n\t\tsetBelonging(_DialogBelonging): void {\n\t\t\tthis.DialogBelonging = _DialogBelonging;\n\t\t}\n\n\t}\n\n\texport class DialogCarrier {\n\n\t\tdialogBelonging: DialogBelonging = new DialogBelonging();\n\t\tprivate component: Type<any>;\n\n\t\tconstructor() {\n\t\t}\n\n\t\tsetComponent(_Component: Type<any>): void {\n\t\t\tthis.component = _Component;\n\t\t}\n\n\t\tsetButtons(_Buttons: GlobalInterface.IButton[]) {\n\t\t\tif (_Buttons.length) {\n\t\t\t\tthis.dialogBelonging.Buttons = _Buttons;\n\t\t\t}\n\t\t}\n\n\t\tsetCustomData(_CustomData: any) {\n\t\t\tthis.dialogBelonging.CustomData = _CustomData;\n\t\t}\n\n\t\tsetConfig(_DialogConfig: DialogInterface.IDialogCoreConfig) {\n\t\t\t// region *** local UserConfig (defined on place where dialog is called) ***\n\t\t\tconst dataControl = new GlobalClass.DataControl();\n\t\t\tdataControl.copyValuesFrom(_DialogConfig, this.dialogBelonging.DialogCoreConfig);\n\t\t\tif (_DialogConfig?.LoaderComponent) {\n\t\t\t\tthis.dialogBelonging.DialogCoreConfig.DisplayLoader = true;\n\t\t\t}\n\t\t\t// endregion\n\t\t}\n\n\t\topenDialog$(): Observable<DialogInterface.IPrivateResponseMerged> {\n\t\t\tconst service: DialogService = ServiceLocator.injector.get(DialogService);\n\t\t\tconst dialogController       = service.open(this.component, this.dialogBelonging);\n\t\t\treturn dialogController.afterClosed$;\n\t\t}\n\n\t}\n\n\texport class DialogCoreConfig implements DialogInterface.IDialogCoreConfig {\n\t\tWidth: string                    = null;\n\t\tHeight: string                   = null;\n\t\tButtonPosition: VerticalPosition = null;\n\t\tLayoutType: DialogLayoutDisplay  = null;\n\t\tDisplayLoader: boolean           = null;\n\t\tLoaderComponent: Type<any>       = null;\n\t}\n\n\texport class DialogSettings {\n\t\tButtons: GlobalInterface.IButton[]                  = [];\n\t\tDialogCoreConfig: DialogInterface.IDialogCoreConfig = new DialogCoreConfig();\n\t}\n\n\texport class DialogBelonging<CustomData = any> extends DialogSettings implements DialogInterface.IDialogBelonging {\n\n\t\t/** @internal */\n\t\tEntityUniqueID: string = 'D' + Math.random().toString(36).substr(2, 9);\n\n\t\tCustomData: CustomData = null;\n\t\tEventsController: DialogInterface.IDialogEventsController;\n\n\t\tconstructor() {\n\t\t\tsuper();\n\t\t\tthis.EventsController                         = new DialogEventsController(this.EntityUniqueID);\n\t\t\tconst dialogConfigurator: DialogConfigService = ServiceLocator.injector.get(DialogConfigService);\n\t\t\tconst baseSettings                            = new DialogSettings();\n\t\t\tconst dataControl                             = new GlobalClass.DataControl();\n\t\t\tdataControl.copyValuesFrom(dialogConfigurator.productionConfig.DialogCoreConfig, baseSettings.DialogCoreConfig);\n\t\t\tthis.DialogCoreConfig = baseSettings.DialogCoreConfig;\n\t\t\tthis.Buttons          = dialogConfigurator.productionConfig.Buttons.slice();\n\t\t}\n\n\t}\n}\n","import {CommonModule} from '@angular/common';\nimport {Injector, ModuleWithProviders, NgModule} from '@angular/core';\nimport {BrowserModule} from '@angular/platform-browser';\nimport {BrowserAnimationsModule} from '@angular/platform-browser/animations';\nimport {GlobalInterface} from './core/global';\nimport {GlobalConfigService} from './core/global-config.service';\nimport {InsertionLoaderDirective} from './core/insertion-loader.directive';\nimport {InsertionDirective} from './core/insertion.directive';\nimport {DefaultLoaderComponent} from './default-loader/default-loader.component';\nimport {ServiceLocator} from './locator.service';\nimport {ConfirmBoxWrapperComponent} from './types/confirm-box/confirm-box-wrapper/confirm-box-wrapper.component';\nimport {ConfirmBoxConfigService} from './types/confirm-box/core/confirm-box-config.service';\nimport {ConfirmBoxService} from './types/confirm-box/core/confirm-box-service';\nimport {ConfirmBoxClass, ConfirmBoxInterface} from './types/confirm-box/core/model';\nimport {DialogConfigService} from './types/dialog/core/dialog-config.service';\nimport {DialogService} from './types/dialog/core/dialog.service';\nimport {DialogClass, DialogInterface} from './types/dialog/core/model';\nimport {DialogWrapperComponent} from './types/dialog/dialog-wrapper/dialog-wrapper.component';\nimport {ToastNotificationClass, ToastNotificationInterface} from './types/toast-notification/core/model';\nimport {ToastNotificationConfigService} from './types/toast-notification/core/toast-notification-config.service';\nimport {ToastNotificationService} from './types/toast-notification/core/toast-notification.service';\nimport {ToastNotificationSimpleWrapperComponent} from './types/toast-notification/toast-notification-simple-wrapper/toast-notification-simple-wrapper.component';\nimport {ToastNotificationWrapperComponent} from './types/toast-notification/toast-notification-wrapper/toast-notification-wrapper.component';\n\n@NgModule({\n\tdeclarations   : [\n\t\tDialogWrapperComponent,\n\t\tInsertionDirective,\n\t\tInsertionLoaderDirective,\n\t\tDefaultLoaderComponent,\n\t\tConfirmBoxWrapperComponent,\n\t\tToastNotificationWrapperComponent,\n\t\tToastNotificationSimpleWrapperComponent\n\t],\n\timports        : [\n\t\tCommonModule,\n\t\tBrowserModule,\n\t\tBrowserAnimationsModule\n\t],\n\tproviders      : [\n\t\tDialogService,\n\t\tConfirmBoxService,\n\t\tToastNotificationService,\n\t\tGlobalConfigService,\n\t\tDialogConfigService,\n\t\tConfirmBoxConfigService,\n\t\tToastNotificationConfigService,\n\t\tDialogClass.DialogBelonging,\n\t\tConfirmBoxClass.ConfirmBoxBelonging,\n\t\tToastNotificationClass.ToastNotificationBelonging\n\t],\n\tentryComponents: [\n\t\tDialogWrapperComponent,\n\t\tDefaultLoaderComponent,\n\t\tConfirmBoxWrapperComponent,\n\t\tToastNotificationWrapperComponent,\n\t\tToastNotificationSimpleWrapperComponent\n\t]\n})\n\nexport class NgxAwesomePopupModule {\n\tconstructor(\n\t\tprivate injector: Injector,\n\t\tprivate gConfigService: GlobalConfigService\n\t) {\n\t\tServiceLocator.injector = injector;\n\t}\n\n\tstatic forRoot(globalConfig?: GlobalInterface.IGlobalUserConfig): ModuleWithProviders<NgxAwesomePopupModule> {\n\t\treturn {\n\t\t\tngModule : NgxAwesomePopupModule,\n\t\t\tproviders: [GlobalConfigService, {provide: 'globalConfig', useValue: globalConfig}]\n\n\t\t};\n\t}\n\n}\n\n@NgModule({})\nexport class DialogConfigModule {\n\n\tstatic forRoot(dialogConfig?: DialogInterface.IDialogUserConfig): ModuleWithProviders<DialogConfigModule> {\n\t\treturn {\n\t\t\tngModule : DialogConfigModule,\n\t\t\tproviders: [DialogConfigService, {provide: 'dialogConfig', useValue: dialogConfig}]\n\n\t\t};\n\t}\n}\n\n@NgModule({})\nexport class ConfirmBoxConfigModule {\n\n\tstatic forRoot(confirmBoxConfig?: ConfirmBoxInterface.IConfirmBoxUserConfig): ModuleWithProviders<ConfirmBoxConfigModule> {\n\t\treturn {\n\t\t\tngModule : ConfirmBoxConfigModule,\n\t\t\tproviders: [ConfirmBoxConfigService, {provide: 'confirmBoxConfig', useValue: confirmBoxConfig}]\n\n\t\t};\n\t}\n}\n\n@NgModule({})\nexport class ToastNotificationConfigModule {\n\n\tstatic forRoot(toastNotificationConfig?: ToastNotificationInterface.IToastNotificationUserConfig): ModuleWithProviders<ToastNotificationConfigModule> {\n\t\treturn {\n\t\t\tngModule : ToastNotificationConfigModule,\n\t\t\tproviders: [ToastNotificationConfigService, {provide: 'toastNotificationConfig', useValue: toastNotificationConfig}]\n\n\t\t};\n\t}\n}\n","import {GlobalClass, GlobalInterface} from './ngx-awesome-popup/core/global';\nimport {ConfirmBoxClass, ConfirmBoxInterface} from './ngx-awesome-popup/types/confirm-box/core/model';\nimport {ToastNotificationClass, ToastNotificationInterface, ToastPositionEnum, ToastUserViewTypeEnum} from './ngx-awesome-popup/types/toast-notification/core/model';\nimport {DialogClass, DialogInterface} from './ngx-awesome-popup/types/dialog/core/model';\n\nimport IButton = GlobalInterface.IButton;\nimport IDispatch = GlobalInterface.IDispatch;\nimport IGlobalUserConfig = GlobalInterface.IGlobalUserConfig;\nimport IColorTypes = GlobalInterface.IColorTypes;\nimport ButtonMaker = GlobalClass.ButtonMaker;\nimport ResetGlobalConfig = GlobalClass.ResetGlobalConfig;\n\nimport IConfirmBoxPublicResponse = ConfirmBoxInterface.IConfirmBoxPublicResponse;\nimport IConfirmBoxUserConfig = ConfirmBoxInterface.IConfirmBoxUserConfig;\nimport IConfirmBoxCoreConfig = ConfirmBoxInterface.IConfirmBoxCoreConfig;\nimport ConfirmBoxInitializer = ConfirmBoxClass.ConfirmBoxInitializer;\n\nimport IToastNotificationPublicResponse = ToastNotificationInterface.IToastNotificationPublicResponse;\nimport ToastNotificationInitializer = ToastNotificationClass.ToastNotificationInitializer;\nimport IToastCoreConfig = ToastNotificationInterface.IToastCoreConfig;\nimport IGlobalToastSettings = ToastNotificationInterface.IGlobalToastSettings;\nimport IToastNotificationUserConfig = ToastNotificationInterface.IToastNotificationUserConfig;\nimport ResetToastGlobalSettings = ToastNotificationClass.ResetToastGlobalSettings;\n\nimport IDialogEventsController = DialogInterface.IDialogEventsController;\nimport IDialogPublicResponse = DialogInterface.IDialogPublicResponse;\nimport IDialogUserConfig = DialogInterface.IDialogUserConfig;\nimport IDialogCoreConfig = DialogInterface.IDialogCoreConfig;\nimport DialogInitializer = DialogClass.DialogInitializer;\nimport DialogBelonging = DialogClass.DialogBelonging;\n\n// region *** Interface ***\nexport {IGlobalUserConfig};\nexport {IButton};\nexport {IDispatch};\nexport {IColorTypes};\n\nexport {IConfirmBoxUserConfig};\nexport {IConfirmBoxCoreConfig};\nexport {IConfirmBoxPublicResponse};\n\nexport {IGlobalToastSettings};\nexport {IToastCoreConfig};\nexport {IToastNotificationUserConfig};\nexport {IToastNotificationPublicResponse};\n\nexport {IDialogUserConfig};\nexport {IDialogCoreConfig};\nexport {IDialogPublicResponse};\nexport {IDialogEventsController};\n// endregion\n\nexport {ButtonLayoutDisplay} from './ngx-awesome-popup/core/enums';\nexport {DialogLayoutDisplay} from './ngx-awesome-popup/core/enums';\nexport {VerticalPosition} from './ngx-awesome-popup/core/enums';\nexport {ToastPositionEnum} from './ngx-awesome-popup/types/toast-notification/core/model';\nexport {ToastProgressBarEnum} from './ngx-awesome-popup/types/toast-notification/core/model';\nexport {ToastUserViewTypeEnum} from './ngx-awesome-popup/types/toast-notification/core/model';\n\n\n/**\n * @returns It will return custom button object ready to be used in child component layout.\n */\nexport {ButtonMaker};\n\n/**\n *```typescript\n * // Instantiate config object as example below to change global settings on-fly it takes {@link IGlobalUserConfig}\n * as the argument.\n * new ResetGlobalConfig({\n *     ColorList: {\n *            Primary  : '#ff9e00', // optional\n *            Secondary: '#989ea5', // optional\n *            Info     : '#2f8ee5', // optional\n *            Success  : '#3caea3', // optional\n *            Warning  : '#ffc107', // optional\n *            Danger   : '#e46464', // optional\n *            Light    : '#fbfbfb', // optional\n *            Dark     : '#343a40'  // optional\n *           }\n * })\n * ```\n */\nexport {ResetGlobalConfig};\n\n/**\n *```typescript\n * // Instantiate toast global config object as example below to change global settings on-fly it takes {@link IGlobalToastSettings}\n * as the argument.\n * new ResetToastGlobalSettings({\n *     AllowedNotificationsAtOnce: 2\n * })\n * ```\n */\nexport {ResetToastGlobalSettings};\n\n\n/**\n * This is the class that needs to be added as DI in the constructor of a child component that will be\n * opened dynamically with {@link DialogInitializer}. It contains various information or\n * event controllers, and listeners that can be used in a child component. Also, there is custom data\n * that is sent from component where the {@link DialogInitializer} is. User can set specific type of\n * custom data that child component will receive by including it as generic type.\n *\n *\n * Example:\n * ```typescript\n *import {DialogBelonging} from 'ngx-awesome-popup';\n *@Component({\n *    selector   : 'app-cup',\n *    templateUrl: './cup.component.html',\n *    styleUrls  : ['./cup.component.scss']\n *})\n * export class CupComponent implements OnInit, OnDestroy {\n *\n *    subscriptions: Subscription[] = [];\n *\n *    constructor(private dialogBelonging: DialogBelonging) {\n *    }\n *\n *    ngOnInit(): void {\n *    console.log(this.dialogBelonging);\n *\n *        this.subscriptions.push(\n *            this.dialogBelonging.EventsController.onButtonClick$.subscribe((_Button) => {\n *            if (_Button.ID === 'ok') {\n *                // Do some logic and close popup.\n *                this.dialogBelonging.EventsController.close();\n *            } else if (_Button.ID === 'cancel') {\n *                // Do some logic and close popup.\n *                this.dialogBelonging.EventsController.close();\n *            }\n *        })\n *        );\n *\n *        setTimeout(() => {\n *            // Close loader after async data is ready.\n *            this.dialogBelonging.EventsController.closeLoader();\n *        }, 1000);\n *    }\n *}\n\n ngOnDestroy(): void {\n        // Close all subscriptions.\n        this.subscriptions.forEach(sub => sub.unsubscribe());\n    }\n * ```\n * @category child dynamic component data & event controller\n */\nexport {DialogBelonging};\n\n// region *** Observable response after closing popup ***\n/**\n * Regular description\n *\n * @category Observable response after closing popup\n */\nexport {IToastNotificationPublicResponse as IToastNotificationResponse};\n/**\n * Regular description\n *\n * @category Observable response after closing popup\n */\nexport {IConfirmBoxPublicResponse as IConfirmBoxResponse};\n/**\n * Regular description\n *\n * @category Observable response after closing popup\n */\nexport {IDialogPublicResponse as IDialogResponse};\n// endregion\n\n// region *** Popup open  ***\n\n/**\n * This is the class that needs to be instantiated to set up and ignite a ToastNotification,\n * its purpose is to show short notification to end-user, or even interact with user.\n * It can be evoked from any angular typescript file.\n *\n * Below is the example with (some optional) user configuration,\n * it will override default configuration from app.module.\n *\n *\n * Example:\n * ```typescript\n * // Create the initializer.\n *const newToastNotification = new ToastNotificationInitializer();\n *\n * // Set desired Title.\n *newToastNotification.setTitle('Warning!');\n *\n * // Set desired Message.\n *newToastNotification.setMessage('Form is not valid!');\n *\n * // Set desired configuration.\n *newToastNotification.setConfig({\n *      LayoutType: DialogLayoutDisplay.WARNING\n *   });\n\n * // Open a ToastNotification.\n * newConfirmBox.openConfirmBox$().subscribe(resp => {\n *   console.log('confirmBox response: ', resp);\n *  });\n * ```\n * * IToastCoreConfig: {@link IToastCoreConfig}\n * * LayoutType: {@link DialogLayoutDisplay}\n * * IToastNotificationPublicResponse: {@link IToastNotificationPublicResponse}\n * @category Popup open\n */\nexport {ToastNotificationInitializer};\n/**\n * This is the class that needs to be instantiated to set up and ignite a ConfirmBox and create content.\n * Its purpose is to get confirmation response from end-user. It can be called from any angular\n * typescript file.\n *\n * Below is example with (some optional) user configuration,\n * it will override default configuration from app.module.\n *\n *\n * Example:\n * ```typescript\n * // Create the initializer.\n *const newConfirmBox = new ConfirmBoxInitializer();\n *\n * // Set desired dispatch: _Title: string, _Message: string.\n *newConfirmBox.setDispatch('Are you sure?', 'That action will delete user!');\n *\n * // Set desired configuration.\n *newConfirmBox.setConfig({\n *      LayoutType: DialogLayoutDisplay.DANGER\n *   });\n *\n * // Set button labels.\n * newConfirmBox.setButtonLabels('YES', 'NO');\n *\n * // Open a ConfirmBox, and get clicked button-id in response.\n * newConfirmBox.openConfirmBox$().subscribe(resp => {\n *   // IConfirmBoxPublicResponse\n *   console.log('confirmBox response: ', resp);\n *  });\n * ```\n * * IConfirmBoxCoreConfig: {@link IConfirmBoxCoreConfig}\n * * LayoutType: {@link DialogLayoutDisplay}\n * * IConfirmBoxPublicResponse: {@link IConfirmBoxPublicResponse}\n * @category Popup open\n */\nexport {ConfirmBoxInitializer};\n/**\n * This is the class that needs to be instantiated to set up and ignite a Dialog and create dynamic component,\n * its purpose is to render any angular component view with specific configuration from any angular typescript file.\n * Dynamic component means that user can evoke the popup from typescript and component view\n * is dynamically created with the Awesome Popup engine. There is no need to call any selector in HTML to create component view.\n *\n * DialogInitializer can send data to child component (dynamic component) where data will be accessible with {@link DialogBelonging}.\n *\n * Below is the example with (some optional) user configuration,\n * it will override default configuration from app.module.\n *\n *\n * Example:\n * ```typescript\n *  import {DialogInitializer, DialogLayoutDisplay, ButtonMaker, ButtonLayoutDisplay} from 'ngx-awesome-popup';<\n *  import {CupComponent} from './cup/cup.component';\n *\n *  const newDialogPopup = new DialogInitializer(CupComponent); // Any Angular component.\n *\n *  // Custom data will be sent to dynamic component available in dialogBelonging object.\n *  newDialogPopup.setCustomData({name: 'John', surname: 'Doe', id: 1});\n *\n *  // Local config settings IDialogCoreConfig.\n *  newDialogPopup.setConfig({\n *      Height: '500px',\n *      LayoutType: DialogLayoutDisplay.INFO,\n *      LoaderComponent: Any Angular component name\n *       });\n *\n *  // Custom buttons, listener is available in child component in dialogBelonging object.\n *  newDialogPopup.setButtons([\n *      new ButtonMaker('Ok', 'ok', ButtonLayoutDisplay.PRIMARY),\n *      new ButtonMaker('Cancel', 'cancel', ButtonLayoutDisplay.SECONDARY)\n *  ]);\n *\n *  // Command to open dialog, it returns observable.\n *  newDialogPopup.openDialog$<any>().subscribe(resp => {\n *           console.log('response: ', resp.Payload);\n *       });\n * ```\n * * IDialogCoreConfig: {@link IDialogCoreConfig}\n * * LayoutType: {@link DialogLayoutDisplay}\n * * ButtonLayoutDisplay: {@link ButtonLayoutDisplay}\n * * ButtonMaker: {@link ButtonMaker}\n * * IDialogPublicResponse: {@link IDialogPublicResponse}\n * @category Popup open\n */\nexport {DialogInitializer};\n// endregion\n\n// region *** Imports for angular app.module ***\n/**\n * This is the main module of the library, it is crucial to be added within angular.app\n * imports as an example with optional argument, look: {@link IGlobalUserConfig}\n *\n * ```typescript\n * // app.module imports:\n * NgxAwesomePopupModule.forRoot({\n *     ColorList: {\n *            Primary  : '#ff9e00', // optional\n *            Secondary: '#989ea5', // optional\n *            Info     : '#2f8ee5', // optional\n *            Success  : '#3caea3', // optional\n *            Warning  : '#ffc107', // optional\n *            Danger   : '#e46464', // optional\n *            Light    : '#fbfbfb', // optional\n *            Dark     : '#343a40'  // optional\n *           }\n * })\n * ```\n * @category Imports for angular app.module\n */\nexport {NgxAwesomePopupModule} from './ngx-awesome-popup/ngx-awesome-popup.module';\n/**\n * This is the module that ignites dynamic dialog modal, its purpose is to load any angular component in\n * dialog window. Dynamic component means that user can evoke any Angular component in the popup just from typescript. Component view\n * is dynamically created with the library engine and there is no need to call any selector in HTML to create component view.\n *\n * It is crucial for user to add this module in angular.app imports.\n * Below is the example with (optional) default user configuration, that is what will be in setup if there is no\n * local config when popup is evoked, that means it can be overridden directly when popup is called.\n * For implementation look: {@link IDialogUserConfig}.\n *\n * Example:\n * ```typescript\n * // app.module imports:\n *DialogConfigModule.forRoot({\n *     DialogCoreConfig: {\n *        Width        : '500px',\n *        ButtonPosition: 'right',\n *        LayoutType: DialogLayoutDisplay.INFO,\n *        LoaderComponent: // Any angular component class name can be included as a loader.\n *     },\n *     Buttons: [\n *        new ButtonMaker('Ok', 'ok', ButtonLayoutDisplay.PRIMARY),\n *        new ButtonMaker('Cancel', 'cancel', ButtonLayoutDisplay.SECONDARY)\n *     ],\n * })\n * ```\n * * DialogCoreConfig.LayoutType: {@link DialogLayoutDisplay}\n * * ButtonLayoutDisplay: {@link ButtonLayoutDisplay}\n * * ButtonMaker: {@link ButtonMaker}\n * @category Imports for angular app.module\n */\nexport {DialogConfigModule} from './ngx-awesome-popup/ngx-awesome-popup.module';\n/**\n * This is the module that ignites Confirm box dialog, its purpose is to show popup in a\n * small dialog window in the middle of the screen. User can provide title, message and include buttons.\n * Confirm box is available in predefined layout types (enums): {@link DialogLayoutDisplay}.\n *\n * It is crucial for user to add this module in angular.app imports.\n * Below is the example with (optional) default user configuration, that's what will be used if there is no\n * local config when popup is evoked, that means it can be overridden directly when popup is evoked.\n * For implementation look: {@link IConfirmBoxUserConfig}.\n *\n * Example:\n * ```typescript\n * // app.module imports:\n *ConfirmBoxConfigModule.forRoot({\n *    ConfirmBoxCoreConfig: {\n *       Width: '700px',\n *       LayoutType: DialogLayoutDisplay.DANGER,\n *       ButtonPosition: 'center'\n *    },\n *    Dispatch: {  // Optional default dispatch object.\n *       Title: 'Default title',\n *       Message: 'Default message'\n *    },\n *    Buttons     : [\n *       new ButtonMaker('Ok', 'ok', ButtonLayoutDisplay.PRIMARY),\n *       new ButtonMaker('Cancel', 'cancel', ButtonLayoutDisplay.SECONDARY)\n *    ]\n * })\n * ```\n * * ConfirmBoxCoreConfig: {@link IConfirmBoxCoreConfig}\n * * Dispatch: {@link IDispatch}\n * * Buttons: {@link IButton}\n * * ButtonMaker: {@link ButtonMaker}\n * @category Imports for angular app.module\n */\nexport {ConfirmBoxConfigModule} from './ngx-awesome-popup/ngx-awesome-popup.module';\n/**\n * This is the module that ignites Toast notifications dialog, its purpose is to show toast popup in a\n * small dialog window in the corner of the screen. User can provide title and message and include buttons, or setup auto disappearing.\n * Toast notifications are available in predefined layout types (enums): {@link DialogLayoutDisplay}.\n *\n * It is crucial for user to add this module in angular.app imports.\n * Below is the example with (optional) default user configuration, that's what will be used if there is no\n * local config when popup is evoked, that means it can be overridden directly when popup is evoked.\n * For implementation look: {@link IToastNotificationUserConfig}.\n *\n * Example:\n * ```typescript\n * // app.module imports:\n *ToastNotificationConfigModule.forRoot({\n *    ToastCoreConfig: {\n *       Width: '300px',\n *    },\n *    GlobalSettings: {\n *       // The number of toast notifications that can be shown at once.\n *       AllowedNotificationsAtOnce: 4,\n *\n *        // Milliseconds it will be ignored if buttons are included.\n *       AutoCloseDelay: 3000\n *    },\n *    // Optional default dispatch object.\n *    Dispatch: {\n *      Title: 'Default title',\n *      Message: 'Default message'\n *   },\n *   Buttons: [\n *      new ButtonMaker('Ok', 'ok', ButtonLayoutDisplay.PRIMARY),\n *      new ButtonMaker('Cancel', 'cancel', ButtonLayoutDisplay.SECONDARY)\n *   ]\n *})\n * ```\n * * ToastCoreConfig: {@link IToastCoreConfig}\n * * GlobalSettings: {@link IGlobalToastSettings}\n * * Dispatch: {@link IDispatch}\n * * Buttons: {@link IButton}\n * * ButtonMaker: {@link ButtonMaker}\n * @category Imports for angular app.module\n */\nexport {ToastNotificationConfigModule} from './ngx-awesome-popup/ngx-awesome-popup.module';\n// endregion\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n\nexport {fadeInOut as ɵb} from './ngx-awesome-popup/core/animations';\nexport {GlobalInterface as ɵm} from './ngx-awesome-popup/core/global';\nexport {GlobalConfigService as ɵl} from './ngx-awesome-popup/core/global-config.service';\nexport {InsertionLoaderDirective as ɵd} from './ngx-awesome-popup/core/insertion-loader.directive';\nexport {InsertionDirective as ɵc} from './ngx-awesome-popup/core/insertion.directive';\nexport {DefaultLoaderComponent as ɵf} from './ngx-awesome-popup/default-loader/default-loader.component';\nexport {ConfirmBoxWrapperComponent as ɵg} from './ngx-awesome-popup/types/confirm-box/confirm-box-wrapper/confirm-box-wrapper.component';\nexport {ConfirmBoxConfigService as ɵv} from './ngx-awesome-popup/types/confirm-box/core/confirm-box-config.service';\nexport {ConfirmBoxService as ɵp} from './ngx-awesome-popup/types/confirm-box/core/confirm-box-service';\nexport {ConfirmBoxClass as ɵh,ConfirmBoxInterface as ɵw} from './ngx-awesome-popup/types/confirm-box/core/model';\nexport {DialogConfigService as ɵt} from './ngx-awesome-popup/types/dialog/core/dialog-config.service';\nexport {DialogService as ɵo} from './ngx-awesome-popup/types/dialog/core/dialog.service';\nexport {DialogClass as ɵe,DialogInterface as ɵu} from './ngx-awesome-popup/types/dialog/core/model';\nexport {DialogWrapperComponent as ɵa} from './ngx-awesome-popup/types/dialog/dialog-wrapper/dialog-wrapper.component';\nexport {ToastNotificationClass as ɵk,ToastNotificationInterface as ɵs} from './ngx-awesome-popup/types/toast-notification/core/model';\nexport {ToastNotificationConfigService as ɵr} from './ngx-awesome-popup/types/toast-notification/core/toast-notification-config.service';\nexport {ToastNotificationService as ɵq} from './ngx-awesome-popup/types/toast-notification/core/toast-notification.service';\nexport {WrapperAbstraction as ɵj} from './ngx-awesome-popup/types/toast-notification/core/wrapper-abstraction';\nexport {ToastNotificationSimpleWrapperComponent as ɵn} from './ngx-awesome-popup/types/toast-notification/toast-notification-simple-wrapper/toast-notification-simple-wrapper.component';\nexport {ToastNotificationWrapperComponent as ɵi} from './ngx-awesome-popup/types/toast-notification/toast-notification-wrapper/toast-notification-wrapper.component';"],"names":[],"mappings":"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"}